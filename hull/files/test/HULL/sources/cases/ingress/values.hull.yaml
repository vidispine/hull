################################ 
### Example values.yaml with all features applied
################################

###################################################
### CONFIG
hull:
#  config:
#    general:  
#      data: {} 
#      metadata:
#        labels:         
#          custom: 
#            general_custom_label_1: General Custom Label 1
#            general_custom_label_2: General Custom Label 2
#            general_custom_label_3: General Custom Label 3
#        annotations: 
#          custom:
#            general_custom_annotation_1: General Custom Annotation 1
#            general_custom_annotation_2: General Custom Annotation 2
#            general_custom_annotation_3: General Custom Annotation 3
#    specific: {}
  ###################################################
          
  ###################################################
  ### OBJECTS
  objects:
    
  # INGRESS
    ingress:
      
      multi:
        rules:
          first_host:
            host: host.one.com
            http:              
              paths:                  
                standard:
                  path: /standard
                  pathType: ImplementationSpecific
                  backend:
                    service:
                      name: service1_standard
                      port: 
                        number: 80
                backup:
                  path: /backup
                  pathType: ImplementationSpecific
                  backend:
                    service:
                      name: service1_backup
                      port: 
                        number: 80
          second_host:
            host: host.two.com
            http:              
              paths:                  
                standard:
                  path: /standard
                  pathType: ImplementationSpecific                    
                  backend:
                    service:
                      name: service1_standard
                      port: 
                        number: 80
                backup:
                  path: /backup
                  pathType: ImplementationSpecific
                  backend:
                    service:
                      name: service1_backup
                      port: 
                        number: 80
        tls:          
          first_host:
            secretName: mysecret
            hosts:
              - "host.one.com"
    
      staticnames:
        rules:
          first_host:
            host: host.one.com
            http:              
              paths:                  
                standard:
                  path: /external
                  pathType: ImplementationSpecific
                  backend:
                    service:
                      name: external_service
                      staticName: true
                      port: 
                        number: 80                
          second_host:
            host: host.two.com
            http:              
              paths:                  
                standard:
                  path: /standard
                  pathType: ImplementationSpecific                    
                  backend:
                    service:
                      name: service1_standard
                      port: 
                        number: 80                
          third_host:
            host: host.three.com
            http:              
              paths:                  
                standard:
                  path: /transform
                  pathType: ImplementationSpecific
                  backend:
                    service:
                      name: _HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.makefullname>>><<<COMPONENT=full_name_transformed>>>
                      staticName: true
                      port: 
                        number: 80                
        tls:          
          first_host:
            secretName: external_secret
            staticName: true
            hosts:
              - "host.one.com"
          second_host:
            secretName: local_secret            
            hosts:
              - "host.two.com"

      tls-rules-enabled-false-true:
        enabled: true
        staticName: false
        rules:
          test_disabled:
            enabled: false
            host: test_disabled.one.com
            http:
              paths:
                standard:
                  path: /external
                  pathType: ImplementationSpecific
                  backend:
                    service:
                      name: external_service
                      staticName: true
                      port: 
                        number: 80
          test_enabled:
            enabled: true
            host: test_enabled.two.com
            http:
              paths:
                test_enabled:
                  enabled: true
                  path: /test_enabled
                  pathType: ImplementationSpecific
                  backend:
                    service:
                      name: service1_standard
                      port: 
                        number: 80
                test_disabled:
                  enabled: false
                  path: /test_disabled
                  pathType: ImplementationSpecific
                  backend:
                    service:
                      name: service1_standard
                      port: 
                        number: 80
                test_enabled_transform:
                  enabled: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
                    {{ (index . \"PARENT\").Values.hull.config.specific.switch_enabled_on }}
                    >>>"
                  path: /test_enabled_transform
                  pathType: ImplementationSpecific
                  backend:
                    service:
                      name: service1_standard
                      port: 
                        number: 80
                test_disabled_transform:
                  enabled: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
                    {{ (index . \"PARENT\").Values.hull.config.specific.switch_enabled_off }}
                    >>>"
                  path: /test_disabled_transform
                  pathType: ImplementationSpecific
                  backend:
                    service:
                      name: service1_standard
                      port: 
                        number: 80
                test_enabled_missing:
                  path: /test_enabled_missing
                  pathType: ImplementationSpecific
                  backend:
                    service:
                      name: service1_standard
                      port: 
                        number: 80
          test_disabled_transform:
            enabled: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
              {{ (index . \"PARENT\").Values.hull.config.specific.switch_enabled_off }}
              >>>"
            host: test_disabled_transform.one.com
            http:
              paths:
                standard:
                  path: /external
                  pathType: ImplementationSpecific
                  backend:
                    service:
                      name: external_service
                      staticName: true
                      port: 
                        number: 80
          test_enabled_transform:
            enabled: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
              {{ (index . \"PARENT\").Values.hull.config.specific.switch_enabled_on }}
              >>>"
            host: test_enabled_transform.two.com
            http:
              paths:
                standard:
                  path: /standard
                  pathType: ImplementationSpecific
                  backend:
                    service:
                      name: service1_standard
                      port: 
                        number: 80
          test_enabled_mssing:
            host: test_enabled_missing.two.com
            http:
              paths:
                standard:
                  path: /standard
                  pathType: ImplementationSpecific
                  backend:
                    service:
                      name: service1_standard
                      port: 
                        number: 80
        tls:          
          test_disabled:
            enabled: false
            secretName: test_disabled
            staticName: true
            hosts:
              - "host.one.com"
          test_enabled:
            enabled: true
            secretName: test_enabled
            hosts:
              - "host.two.com"
          test_disabled_transform:
            enabled: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
              {{ (index . \"PARENT\").Values.hull.config.specific.switch_enabled_off }}
              >>>"
            secretName: test_disabled_transform
            staticName: true
            hosts:
              - "host.one.com"
          test_enabled_transform:
            enabled: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
              {{ (index . \"PARENT\").Values.hull.config.specific.switch_enabled_on }}
              >>>"
            secretName: test_enabled_transform
            hosts:
              - "host.two.com"
          test_enabled_missing:
            secretName: test_enabled_missing
            hosts:
              - "host.two.com"
      
      vidistream:
        enabled: false
        annotations:
          ingress.kubernetes.io/rewrite-target: /dash
        rules:
          _HULL_OBJECT_TYPE_DEFAULT_:
            http:
              paths:
                dash:
                  backend:
                    service:
                      port: 
                        number: 4531

      metrics:
        enabled: false
        annotations:
          ingress.kubernetes.io/rewrite-target: /streaming/metrics
        rules:
          _HULL_OBJECT_TYPE_DEFAULT_:
            http:
              paths:
                metrics:
                  backend:
                    service:
                      port: 
                        number: 9100

      stream:
        sources:
        - vidistream
        #enabled: _HT?gt (index (index . "$").Values.hull.config.specific.components.vidistream.custom.instances (index . "OBJECT_INSTANCE_KEY")) 0)
        annotations:
          ingress.kubernetes.io/config-backend: |
            no option http-keep-alive
            hash-type consistent
            hash-balance-factor 200
            http-response add-header X-App-Server %b/%s        
        rules:
          stream:
            host: stream
            http:
              paths:
                dash:
                  path: stream
                  pathType: Prefix
                  backend:
                    service:
                      name: 'stream'

      streammetrics:
        #enabled: _HT?gt (index (index . "$").Values.hull.config.specific.components.vidistream.custom.instances ((index . "OBJECT_INSTANCE_KEY") | trimSuffix "metrics")) 0)
        sources:
        - stream
        - metrics
        rules:
          stream:
            http:
              paths:
                metrics:
                  path: stream
                  pathType: Prefix
                  backend:
                    service:
                      name: 'stream'

      ### Loadbalancer configuration for Rendering, stick to fixed servers
      render:
        #enabled: _HT?gt (index (index . "$").Values.hull.config.specific.components.vidistream.custom.instances (index . "OBJECT_INSTANCE_KEY")) 0)
        annotations:
          ingress.kubernetes.io/config-backend: |
            no option http-keep-alive
            no option redispatch
            hash-type consistent
            hash-balance-factor 0
            http-response add-header X-App-Server %b/%s
        rules:
          render:
            host: render
            http:
              paths:
                dash:
                  path: render
                  pathType: Prefix
                  backend:
                    service:
                      name: 'render'

      rendermetrics:
        #enabled: _HT?gt (index (index . "$").Values.hull.config.specific.components.vidistream.custom.instances ((index . "OBJECT_INSTANCE_KEY") | trimSuffix "metrics")) 0)
        annotations:
          ingress.kubernetes.io/config-backend: |
            no option http-keep-alive
            hash-type consistent
            hash-balance-factor 200
            http-response add-header X-App-Server %b/%s
        rules:
          render:
            host: render
            http:
              paths:
                metrics:
                  path: render
                  pathType: Prefix
                  backend:
                    service:
                      name: 'render'

      trickplay:
        #enabled: _HT?gt (index (index . "$").Values.hull.config.specific.components.vidistream.custom.instances (index . "OBJECT_INSTANCE_KEY")) 0)
        annotations:
          ingress.kubernetes.io/config-backend: |
            no option http-keep-alive
            no option redispatch
            hash-type consistent
            hash-balance-factor 0
            http-response add-header X-App-Server %b/%s
        rules:
          trickplay:
            host: trickplay
            http:
              paths:
                dash:
                  path: trickplay
                  pathType: Prefix
                  backend:
                    service:
                      name: 'trickplay'

      trickplaymetrics:
        #enabled: _HT?gt (index (index . "$").Values.hull.config.specific.components.vidistream.custom.instances ((index . "OBJECT_INSTANCE_KEY") | trimSuffix "metrics")) 0)
        annotations:
          ingress.kubernetes.io/config-backend: |
            no option http-keep-alive
            hash-type consistent
            hash-balance-factor 200
            http-response add-header X-App-Server %b/%s
        rules:
          trickplay:
            host: "trickplay"
            http:
              paths:
                metrics:
                  path: trickplay
                  pathType: Prefix
                  backend:
                    service:
                      name: 'trickplay'

      no-tls-rules: {}

###################################################