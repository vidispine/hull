################################ 
### Example values.yaml with all features applied
################################

###################################################
### CONFIG
hull:
  config:
    specific:
      pullPolicy: IfNotPresent
      env_string: "this is some string used in testing"
      env_bool: true
      env_float: 9.8642
      env_integer: 12345
      env_integer_six_digits: 123456
      env_integer_almost_seven_digits: 999999
      env_integer_just_seven_digits: 1000000
      env_integer_seven_digits: 1234567
      env_integer_six_digits_in_string: "123456"
      env_integer_almost_seven_digits_in_string: "999999"
      env_integer_just_seven_digits_in_string: "1000000"
      env_integer_seven_digits_in_string: "1234567"
      env_git_commit: 11724e28
      env_git_commit_in_string: "11724e28"

  objects:
    
    secret:
      secret-one:
        data:
          secret-one-inline-one.json:
            inline: |-
              { "key": "json for hash sum calculation of this secret-one-subpath-one.json" }
          secret-one-inline-one.txt: 
            inline: |-
              i only exist so a sha256 sum can be calculated from an expression like secret-one-subpath-one
          secret-one-inline-one.yaml:
            inline: |-
              key: "yaml for hash sum calculation of this secret-one-subpath-one.yaml"
          secret-one-inline-two.json:
            inline: |-
              key: "json for hash sum calculation of this secret-one-subpath-two.json"
          secret-one-inline-two.txt: 
            inline: |-
              i only exist so a sha256 sum can be calculated from an expression like secret-one-subpath-two
          secret-one-inline-two.yaml:
            inline: |-
              { "key": "yaml for hash sum calculation of this secret-one-subpath-two.yaml" }
          secret-one-path-one.json:
            path: files/secret-one-path-one.json
          secret-one-path-one.txt:
            path: files/secret-one-path-one.txt
          secret-one-path-one.yaml:
            path: files/secret-one-path-one.yaml
          secret-one-path-two.json:
            path: files/secret-one-path-two.json
          secret-one-path-two.txt:
            path: files/secret-one-path-two.txt
          secret-one-path-two.yaml:
            path: files/secret-one-path-two.yaml
      secret-two:
        data:
          secret-two-inline-one.json:
            inline: |-
              { "key": "json for hash sum calculation of this secret-two-subpath-one.json" }
          secret-two-inline-one.txt: 
            inline: |-
              i only exist so a sha256 sum can be calculated from an expression like secret-two-subpath-one
          secret-two-inline-one.yaml:
            inline:
              key: "yaml for hash sum calculation of this secret-two-subpath-one.yaml"
          secret-two-inline-two.json:
            inline: |-
              { "key": "json for hash sum calculation of this secret-two-subpath-two.json" }
          secret-two-inline-two.txt: 
            inline: |-
              i only exist so a sha256 sum can be calculated from an expression like secret-two-subpath-two
          secret-two-inline-two.yaml:
            inline:
              key: "yaml for hash sum calculation of this secret-two-subpath-two.yaml"
          secret-two-path-one.json:
            path: files/secret-two-path-one.json
          secret-two-path-one.txt:
            path: files/secret-two-path-one.txt
          secret-two-path-one.yaml:
            path: files/secret-two-path-one.yaml
          secret-two-path-two.json:
            path: files/secret-two-path-two.json
          secret-two-path-two.txt:
            path: files/secret-two-path-two.txt
          secret-two-path-two.yaml:
            path: files/secret-two-path-two.yaml
      secret-three:
        data:
          secret-three-inline-one.json:
            inline: |-
              { "key": "json for hash sum calculation of this secret-three-subpath-one.json" }
          secret-three-inline-one.txt: 
            inline: |-
              i only exist so a sha256 sum can be calculated from an expression like secret-three-subpath-one
          secret-three-inline-one.yaml:
            inline:
              key: "yaml for hash sum calculation of this secret-three-subpath-one.yaml"
          secret-three-inline-two.json:
            inline: |-
              { "key": "json for hash sum calculation of this secret-three-subpath-two.json" }
          secret-three-inline-two.txt: 
            inline: |-
              i only exist so a sha256 sum can be calculated from an expression like secret-three-subpath-two
          secret-three-inline-two.yaml:
            inline:
              key: "yaml for hash sum calculation of this secret-three-subpath-two.yaml"
          secret-three-path-one.json:
            path: files/secret-three-path-one.json
          secret-three-path-one.txt:
            path: files/secret-three-path-one.txt
          secret-three-path-one.yaml:
            path: files/secret-three-path-one.yaml
          secret-three-path-two.json:
            path: files/secret-three-path-two.json
          secret-three-path-two.txt:
            path: files/secret-three-path-two.txt
          secret-three-path-two.yaml:
            path: files/secret-three-path-two.yaml
      
    configmap:
      configmap-one:
        data:
          configmap-one-inline-one.json:
            inline: |-
              { "key": "json for hash sum calculation of this configmap-one-subpath-one.json" }
          configmap-one-inline-one.txt: 
            inline: |-
              i only exist so a sha256 sum can be calculated from an expression like configmap-one-subpath-one
          configmap-one-inline-one.yaml:
            inline:
              key: yaml for hash sum calculation of this configmap-one-subpath-one.yaml
          configmap-one-inline-two.json:
            inline: |-
              key: "json for hash sum calculation of this configmap-one-subpath-two.json"
          configmap-one-inline-two.txt: 
            inline: |-
              i only exist so a sha256 sum can be calculated from an expression like configmap-one-subpath-two
          configmap-one-inline-two.yaml:
            inline: |-
              { "key": "yaml for hash sum calculation of this configmap-one-subpath-two.yaml" }
          configmap-one-path-one.json:
            path: files/configmap-one-path-one.json
          configmap-one-path-one.txt:
            path: files/configmap-one-path-one.txt
          configmap-one-path-one.yaml:
            path: files/configmap-one-path-one.yaml
          configmap-one-path-two.json:
            path: files/configmap-one-path-two.json
          configmap-one-path-two.txt:
            path: files/configmap-one-path-two.txt
          configmap-one-path-two.yaml:
            path: files/configmap-one-path-two.yaml
      configmap-two:
        data:
          configmap-two-inline-one.json:
            inline: |-
              { "key": "json for hash sum calculation of this configmap-two-subpath-one.json" }
          configmap-two-inline-one.txt: 
            inline: |-
              i only exist so a sha256 sum can be calculated from an expression like configmap-two-subpath-one
          configmap-two-inline-one.yaml:
            inline:
              key: "yaml for hash sum calculation of this configmap-two-subpath-one.yaml"
          configmap-two-inline-two.json:
            inline: |-
              { "key": "json for hash sum calculation of this configmap-two-subpath-two.json" }
          configmap-two-inline-two.txt: 
            inline: |-
              i only exist so a sha256 sum can be calculated from an expression like configmap-two-subpath-two
          configmap-two-inline-two.yaml:
            inline:
              key: "yaml for hash sum calculation of this configmap-two-subpath-two.yaml"
          configmap-two-path-one.json:
            path: files/configmap-two-path-one.json
          configmap-two-path-one.txt:
            path: files/configmap-two-path-one.txt
          configmap-two-path-one.yaml:
            path: files/configmap-two-path-one.yaml
          configmap-two-path-two.json:
            path: files/configmap-two-path-two.json
          configmap-two-path-two.txt:
            path: files/configmap-two-path-two.txt
          configmap-two-path-two.yaml:
            path: files/configmap-two-path-two.yaml
      configmap-three:
        data:
          configmap-three-inline-one.json:
            inline: |-
              { "key": "json for hash sum calculation of this configmap-three-subpath-one.json" }
          configmap-three-inline-one.txt: 
            inline: |-
              i only exist so a sha256 sum can be calculated from an expression like configmap-three-subpath-one
          configmap-three-inline-one.yaml:
            inline:
              key: "yaml for hash sum calculation of this configmap-three-subpath-one.yaml"
          configmap-three-inline-two.json:
            inline: |-
              { "key": "json for hash sum calculation of this configmap-three-subpath-two.json" }
          configmap-three-inline-two.txt: 
            inline: |-
              i only exist so a sha256 sum can be calculated from an expression like configmap-three-subpath-two
          configmap-three-inline-two.yaml:
            inline:
              key: "yaml for hash sum calculation of this configmap-three-subpath-two.yaml"
          configmap-three-path-one.json:
            path: files/configmap-three-path-one.json
          configmap-three-path-one.txt:
            path: files/configmap-three-path-one.txt
          configmap-three-path-one.yaml:
            path: files/configmap-three-path-one.yaml
          configmap-three-path-two.json:
            path: files/configmap-three-path-two.json
          configmap-three-path-two.txt:
            path: files/configmap-three-path-two.txt
          configmap-three-path-two.yaml:
            path: files/configmap-three-path-two.yaml
    registry:

      example-registry:
        server: example.cr.io
        username: exmple_user
        password: example_password

      local-registry:
        server: local.cr.io
        username: local_user
        password: local_password

    <OBJECT_TYPE>:
        
      service-account:
        pod:
          containers:
            main:
              image:
                repository: my/image/repo
                tag: "99.9"
          serviceAccountName: another_account

      imagepullsecrets-custom:
        pod:
          containers:
            main:
              image:
                repository: my/image/repo
                tag: "99.9"
          imagePullSecrets:
          - name: some-custom-imagepull-secret

      imagepullsecrets-add-all:
        pod:
          containers:
            main:
              image:
                repository: my/image/repo
                tag: "99.9"

      image-name-empty-registry:
        pod:
          containers:
            main:
              image:
                registry: ""
                repository: my/image/repo

      image-name-registry:
        pod:
          containers:
            main:
              image:
                registry: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
                  {{ (index . \"PARENT\").Values.hull.config.specific.globalRegistry }}
                  >>>"
                repository: my/image/repo

      image-name-tag:
        pod:
          containers:
            main:
              image:
                repository: my/image/repo
                tag: "99.9"
            number-tag:
              image:
                repository: my/image/repo
                tag: 99.9
            integer-tag:
              image:
                repository: my/image/repo
                tag: 99
      
      image-pull-policy:
        pod:
          containers:
            never:
              image:
                repository: my/image/repo
                tag: "99.9"
              imagePullPolicy: Never
            not-present:
              image:
                repository: my/image/repo
                tag: "99.9"
              imagePullPolicy: _HT*hull.config.specific.pullPolicy

      custom-args:
        pod:
          containers:
            main:
              image:
                repository: my/image/repo
                tag: "99.9"
              args: 
              - "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
[
{{ if (index . \"PARENT\").Values.hull.config.specific.if_this_arg_is_defined }}
\"{{ (index . \"PARENT\").Values.hull.config.specific.if_this_arg_is_defined }}\",
\"{{ (index . \"PARENT\").Values.hull.config.specific.then_add_this_arg }}\",
{{ end }}
{{ if not (index . \"PARENT\").Values.hull.config.specific.if_this_arg_is_not_defined }}
\"{{ (index . \"PARENT\").Values.hull.config.specific.then_use_this_arg }}\"
{{ end }}
]
>>>"

      int-bool-dict-array-ht:
        pod:
          containers:
            main:
              image:
                repository: my/image/repo
                tag: "99.9"
              args: _HT![
                {{ if (index . "$").Values.hull.config.specific.if_this_arg_is_defined }}
                "{{ (index . "$").Values.hull.config.specific.if_this_arg_is_defined }}",
                "{{ (index . "$").Values.hull.config.specific.then_add_this_arg }}",
                {{ end }}
                {{ if not (index . "$").Values.hull.config.specific.if_this_arg_is_not_defined }}
                "{{ (index . "$").Values.hull.config.specific.then_use_this_arg }}"
                {{ end }}
                ]
              livenessProbe: 
                initialDelaySeconds: _HT!12
              readinessProbe: |-
                _HT!{
                  initialDelaySeconds: 55,
                  periodSeconds: 66,
                  failureThreshold: 77,
                  timeoutSeconds: 88,
                }
              envFrom:
                a_configmap:
                  prefix: sourced_envs_prefix
                  configMapRef:
                    name: full_example_configmap
                    optional: _HT!true
      removal-test:
        pod:
          containers:
            remove: null
            keep:
              image:
                repository: quay.io/external_app
                tag: "latest"
              ports:
                remove: null
      

      volume-test:
        pod:
          containers:
            main:
              image:
                repository: quay.io/external_app
                tag: "latest"
              command:
                - run
          volumes:
            azure_disk_volume:
              azureDisk:
                diskName: "myDisk"
                diskURI: "uri://theDisk"

            nfs_volume:
              nfs:
                path: "local_nfs_path"
                server: "nfs-host.mydomain.com"

            configmap_volume:
              configMap:
                name: a_configmap
                defaultMode: 12

            configmap_volume_static:
              configMap:
                name: a_static_configmap
                defaultMode: 22
                staticName: true

            secret_volume:
              secret:
                secretName: a_secret
                
            secret_volume_static:
              secret:
                defaultMode: 42
                secretName: a_static_secret
                staticName: true
            
            pvc_volume:
              persistentVolumeClaim: 
                claimName: a_claim
                readOnly: true

            pvc_volume_static:
              persistentVolumeClaim:
                claimName: a_static_claim
                readOnly: false
                staticName: true
            
            to_be_removed: null

      env-test:
        pod:
          containers:
            main:
              image:
                repository: my/image/repo
                tag: "99.9"
              command:
                - run
              env:
                ENV_VAR_CONFIGMAP:
                  valueFrom:
                    configMapKeyRef:
                      key: the_configmap_key
                      name: env_configmap_name
                ENV_VAR_CONFIGMAP_STATIC:
                  valueFrom:
                    configMapKeyRef:
                      key: the_configmap_static_key
                      name: env_configmap_name_static
                      staticName: true
                      optional: true
                ENV_VAR_FIELD:
                  valueFrom:
                    fieldRef:
                      fieldPath: "metadata.field"
                      apiVersion: "v1"
                ENV_VAR_SECRET:
                  valueFrom:
                    secretKeyRef:
                      key: the_secret_key
                      name: env_secret_name
                ENV_VAR_SECRET_STATIC:
                  valueFrom:
                    secretKeyRef:
                      key: the_secret_static_key
                      name: env_secret_name
                      staticName: true
                      optional: true
                ENV_VAR_RESOURCE:
                  valueFrom:
                    resourceFieldRef:
                      resource: container
                      containerName: main_container
                      divisor: "5"
                ENV_VAR_VALUE:
                  value: plain_value
                ENV_VAR_VALUE_BOOL: 
                  value: true
                ENV_VAR_VALUE_FLOAT: 
                  value: 0.567
                ENV_VAR_VALUE_INTEGER:
                  value: 5555
                ENV_VAR_VALUE_REFERENCE:
                  value: _HT*hull.config.specific.env_string
                ENV_VAR_VALUE_REFERENCE_BOOL: 
                  value: _HT*hull.config.specific.env_bool
                ENV_VAR_VALUE_REFERENCE_FLOAT: 
                  value: _HT*hull.config.specific.env_float
                ENV_VAR_VALUE_REFERENCE_INTEGER:
                  value: _HT*hull.config.specific.env_integer
                ENV_VAR_VALUE_REFERENCE_INTEGER_SIX_DIGITS:
                  value: _HT*hull.config.specific.env_integer_six_digits
                ENV_VAR_VALUE_REFERENCE_INTEGER_ALMOST_SEVEN_DIGITS:
                  value: _HT*hull.config.specific.env_integer_almost_seven_digits
                ENV_VAR_VALUE_REFERENCE_INTEGER_JUST_SEVEN_DIGITS:
                  value: _HT*hull.config.specific.env_integer_just_seven_digits
                ENV_VAR_VALUE_REFERENCE_INTEGER_SEVEN_DIGITS:
                  value: _HT*hull.config.specific.env_integer_seven_digits
                ENV_VAR_VALUE_REFERENCE_INTEGER_JUST_SEVEN_DIGITS_TO_INT:
                  value: _HT!{{ (index . "$").Values.hull.config.specific.env_integer_just_seven_digits | int64 }}
                ENV_VAR_VALUE_REFERENCE_INTEGER_SEVEN_DIGITS_TO_INT:
                  value: _HT!{{ (index . "$").Values.hull.config.specific.env_integer_seven_digits | int64 }}
                ENV_VAR_VALUE_REFERENCE_INTEGER_JUST_SEVEN_DIGITS_TO_INT_QUOTE:
                  value: _HT!{{ (index . "$").Values.hull.config.specific.env_integer_just_seven_digits | int64 | quote }}
                ENV_VAR_VALUE_REFERENCE_INTEGER_SEVEN_DIGITS_TO_INT_QUOTE:
                  value: _HT!{{ (index . "$").Values.hull.config.specific.env_integer_seven_digits | int64 | quote }}
                ENV_VAR_VALUE_REFERENCE_INTEGER_SIX_DIGITS_IN_STRING:
                  value: _HT*hull.config.specific.env_integer_six_digits_in_string
                ENV_VAR_VALUE_REFERENCE_INTEGER_ALMOST_SEVEN_DIGITS_IN_STRING:
                  value: _HT*hull.config.specific.env_integer_almost_seven_digits_in_string
                ENV_VAR_VALUE_REFERENCE_INTEGER_JUST_SEVEN_DIGITS_IN_STRING:
                  value: _HT*hull.config.specific.env_integer_just_seven_digits_in_string
                ENV_VAR_VALUE_REFERENCE_INTEGER_SEVEN_DIGITS_IN_STRING:
                  value: _HT*hull.config.specific.env_integer_seven_digits_in_string
                ENV_VAR_VALUE_REFERENCE_INTEGER_SIX_DIGITS_IN_STRING_JSON_HACK:
                  value: _HT!{{ (index . "$").Values.hull.config.specific.env_integer_six_digits_in_string | toJson | trimAll "\"" | quote }}
                ENV_VAR_VALUE_REFERENCE_INTEGER_ALMOST_SEVEN_DIGITS_IN_STRING_JSON_HACK:
                  value: _HT!{{ (index . "$").Values.hull.config.specific.env_integer_almost_seven_digits_in_string | toJson | trimAll "\"" | quote }}
                ENV_VAR_VALUE_REFERENCE_INTEGER_JUST_SEVEN_DIGITS_IN_STRING_JSON_HACK:
                  value: _HT!{{ (index . "$").Values.hull.config.specific.env_integer_just_seven_digits_in_string | toJson | trimAll "\"" | quote }}
                ENV_VAR_VALUE_REFERENCE_INTEGER_SEVEN_DIGITS_IN_STRING_JSON_HACK:
                  value: _HT!{{ (index . "$").Values.hull.config.specific.env_integer_seven_digits_in_string | toJson | trimAll "\"" | quote }}
                ENV_VAR_VALUE_REFERENCE_GIT_COMMIT:
                  value: _HT*hull.config.specific.env_git_commit
                ENV_VAR_VALUE_REFERENCE_GIT_COMMIT_IN_STRING:
                  value: _HT*hull.config.specific.env_git_commit_in_string
                ENV_VAR_VALUE_REFERENCE_GIT_COMMIT_JSON_HACK:
                  value: _HT!{{ (index . "$").Values.hull.config.specific.env_git_commit | toJson | trimAll "\"" | quote }}
                ENV_VAR_VALUE_REFERENCE_GIT_COMMIT_IN_STRING_JSON_HACK:
                  value: _HT!{{ (index . "$").Values.hull.config.specific.env_git_commit_in_string | toJson | trimAll "\"" | quote }}
          activeDeadlineSeconds: _HT!{{ (index . "$").Values.hull.config.specific.env_integer_just_seven_digits | int64 }}
      
      envfrom-test:
        pod:
          containers:
            main:
              image:
                repository: my/image/repo
                tag: "99.9"
              command:
                - run
              envFrom:
                ENVFROM_CONFIGMAP:
                  configMapRef:
                    name: envfrom_configmap_name
                    optional: true
                ENVFROM_CONFIGMAP_STATIC:
                  configMapRef:
                    name: envfrom_configmap_name_static
                    staticName: true
                ENVFROM_SECRET:
                  prefix: "a_prefix"
                  secretRef:
                    name: envfrom_secret_name
                    optional: true
                ENVFROM_SECRET_STATIC:
                  secretRef:
                    name: envfrom_secret_name_static
                    staticName: true
                ENVFROM_BOTH:
                  secretRef:
                    name: a_secret
                  configMapRef:
                    name: a_configmap
                ENVFROM_SECRET_STATIC_LONG:
                  secretRef:
                    name: a_very_loooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong_secret_name
                    staticName: true

      enabled-true-false:
        pod:
          containers:
            test_disabled:
              image:
                repository: my/image/repo
                tag: "99.9"
              enabled: false
              command:
                - test_disabled
            test_enabled:
              enabled: true
              image:
                repository: my/image/repo
                tag: "99.9"
              command:
                - test_enabled
              envFrom:
                test_disabled:
                  enabled: false
                  configMapRef:
                    name: test_disabled
                    optional: true
                test_enabled:
                  enabled: true
                  configMapRef:
                    name: test_enabled
                    optional: true
                test_disabled_transform:
                  enabled: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
                    {{ (index . \"PARENT\").Values.hull.config.specific.switch_enabled_off }}
                    >>>"
                  configMapRef:
                    name: test_disabled_transform
                    optional: true
                test_enabled_transform:
                  enabled: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
                    {{ (index . \"PARENT\").Values.hull.config.specific.switch_enabled_on }}
                    >>>"
                  configMapRef:
                    name: test_enabled_transform
                    optional: true
                test_enabled_missing:
                  configMapRef:
                    name: test_enabled_missing
                    optional: true
              env:
                test_disabled:
                  enabled: false
                  value: test_disabled
                test_enabled:
                  enabled: true
                  value: test_enabled
                test_disabled_transform:
                  enabled: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
                    {{ (index . \"PARENT\").Values.hull.config.specific.switch_enabled_off }}
                    >>>"
                  value: test_disabled_transform
                test_enabled_transform:
                  enabled: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
                    {{ (index . \"PARENT\").Values.hull.config.specific.switch_enabled_on }}
                    >>>"
                  value: test_enabled_transform
                test_enabled_missing:
                  value: test_enabled_missing
              ports:
                test_disabled:
                  enabled: false
                  protocol: TCP
                  containerPort: 4345
                test_enabled:
                  enabled: true
                  protocol: TCP
                  containerPort: 4345
                test_disabled_transform:
                  enabled: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
                    {{ (index . \"PARENT\").Values.hull.config.specific.switch_enabled_off }}
                    >>>"
                  protocol: TCP
                  containerPort: 4345
                test_enabled_transform:
                  enabled: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
                    {{ (index . \"PARENT\").Values.hull.config.specific.switch_enabled_on }}
                    >>>"
                  protocol: TCP
                  containerPort: 4345
                test_enabled_missing:
                  protocol: TCP
                  containerPort: 4345
              volumeMounts:
                test_disabled:
                  enabled: false
                  name: test_disabled
                  mountPath: '/etc/init/configmap/all'
                test_enabled:
                  enabled: true
                  name: test_enabled
                  mountPath: '/etc/init/configmap/all'
                test_disabled_transform:
                  enabled: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
                    {{ (index . \"PARENT\").Values.hull.config.specific.switch_enabled_off }}
                    >>>"
                  name: test_disabled_transform
                  mountPath: '/etc/init/configmap/all'
                test_enabled_transform:
                  enabled: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
                    {{ (index . \"PARENT\").Values.hull.config.specific.switch_enabled_on }}
                    >>>"
                  name: test_enabled_transform
                  mountPath: '/etc/init/configmap/all'
                test_enabled_missing:
                  name: test_enabled_missing
                  mountPath: '/etc/init/configmap/all'
            test_enabled_transform:
              enabled: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
                {{ (index . \"PARENT\").Values.hull.config.specific.switch_enabled_on }}
                >>>"
              image:
                repository: my/image/repo
                tag: "99.9"
              command:
                - test_enabled_transform
            test_disabled_transform:
              enabled: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
                {{ (index . \"PARENT\").Values.hull.config.specific.switch_enabled_off }}
                >>>"
              command:
                - test_disabled_transform
            test_enabled_missing:
              image:
                repository: my/image/repo
                tag: "99.9"
              command:
                - test_enabled_missing
          initContainers:
            test_disabled:
              enabled: false
              command:
                - test_disabled
            test_enabled:
              enabled: true
              image:
                repository: my/image/repo
                tag: "99.9"
              command:
                - test_enabled
              envFrom:
                test_disabled:
                  enabled: false
                  configMapRef:
                    name: test_disabled
                    optional: true
                test_enabled:
                  enabled: true
                  configMapRef:
                    name: test_enabled
                    optional: true
                test_disabled_transform:
                  enabled: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
                    {{ (index . \"PARENT\").Values.hull.config.specific.switch_enabled_off }}
                    >>>"
                  configMapRef:
                    name: test_disabled_transform
                    optional: true
                test_enabled_transform:
                  enabled: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
                    {{ (index . \"PARENT\").Values.hull.config.specific.switch_enabled_on }}
                    >>>"
                  configMapRef:
                    name: test_enabled_transform
                    optional: true
                test_enabled_missing:
                  configMapRef:
                    name: test_enabled_missing
                    optional: true
              env:
                test_disabled:
                  enabled: false
                  value: test_disabled
                test_enabled:
                  enabled: true
                  value: test_enabled
                test_disabled_transform:
                  enabled: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
                    {{ (index . \"PARENT\").Values.hull.config.specific.switch_enabled_off }}
                    >>>"
                  value: test_disabled_transform
                test_enabled_transform:
                  enabled: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
                    {{ (index . \"PARENT\").Values.hull.config.specific.switch_enabled_on }}
                    >>>"
                  value: test_enabled_transform
                test_enabled_missing:
                  value: test_enabled_missing
              ports:
                test_disabled:
                  enabled: false
                  protocol: TCP
                  containerPort: 4345
                test_enabled:
                  enabled: true
                  protocol: TCP
                  containerPort: 4345
                test_disabled_transform:
                  enabled: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
                    {{ (index . \"PARENT\").Values.hull.config.specific.switch_enabled_off }}
                    >>>"
                  protocol: TCP
                  containerPort: 4345
                test_enabled_transform:
                  enabled: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
                    {{ (index . \"PARENT\").Values.hull.config.specific.switch_enabled_on }}
                    >>>"
                  protocol: TCP
                  containerPort: 4345
                test_enabled_missing:
                  protocol: TCP
                  containerPort: 4345
              volumeMounts:
                test_disabled:
                  enabled: false
                  name: test_disabled
                  mountPath: '/etc/init/configmap/all'
                test_enabled:
                  enabled: true
                  name: test_enabled
                  mountPath: '/etc/init/configmap/all'
                test_disabled_transform:
                  enabled: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
                    {{ (index . \"PARENT\").Values.hull.config.specific.switch_enabled_off }}
                    >>>"
                  name: test_disabled_transform
                  mountPath: '/etc/init/configmap/all'
                test_enabled_transform:
                  enabled: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
                    {{ (index . \"PARENT\").Values.hull.config.specific.switch_enabled_on }}
                    >>>"
                  name: test_enabled_transform
                  mountPath: '/etc/init/configmap/all'
                test_enabled_missing:
                  name: test_enabled_missing
                  mountPath: '/etc/init/configmap/all'
            test_enabled_transform:
              enabled: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
                {{ (index . \"PARENT\").Values.hull.config.specific.switch_enabled_on }}
                >>>"
              image:
                repository: my/image/repo
                tag: "99.9"
              command:
                - test_enabled_transform
            test_disabled_transform:
              enabled: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
                {{ (index . \"PARENT\").Values.hull.config.specific.switch_enabled_off }}
                >>>"
              command:
                - test_disabled_transform
            test_enabled_missing:
              image:
                repository: my/image/repo
                tag: "99.9"
              command:
                - test_enabled_missing
          volumes:
            test_disabled:
              enabled: false
              secret:
                secretName: test_disabled
            test_enabled:
              enabled: true
              secret:
                secretName: test_enabled
            test_disabled_transform:
              enabled: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
                {{ (index . \"PARENT\").Values.hull.config.specific.switch_enabled_off }}
                >>>"
              secret:
                secretName: test_disabled_transform
            test_enabled_transform:
              enabled: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
                {{ (index . \"PARENT\").Values.hull.config.specific.switch_enabled_on }}
                >>>"
              secret:
                secretName: test_enabled_transform
            test_enabled_missing:
              secret:
                secretName: test_enabled_missing

      transformation-shortforms:
        pod:
          containers:
            test_disabled:
              enabled: false
              command:
                - test_disabled
            test_enabled:
              enabled: true
              image:
                repository: my/image/repo
                tag: "99.9"
              command:
                - _HT![ 'test_enabled' ]
              env:
                test_disabled:
                  enabled: false
                  value: test_disabled
                test_enabled:
                  enabled: true
                  value: _HT*hull.config.specific.name_test_enabled
                test_disabled_transform:
                  enabled: _HT?(index . "$").Values.hull.config.specific.switch_enabled_off
                  value: test_disabled_transform
                test_enabled_transform:
                  enabled: _HT?(index . "$").Values.hull.config.specific.switch_enabled_on
                  value: _HT!{{ (index . "$").Values.hull.config.specific.name_test_enabled }}_transform
                test_enabled_missing:
                  value: _HT!{{ (index . "$").Values.hull.config.specific.name_test_enabled }}_missing
              envFrom:
                test_disabled:
                  enabled: false
                  configMapRef:
                    name: test_disabled
                    optional: true
                test_enabled:
                  enabled: true
                  configMapRef:
                    name: _HT*hull.config.specific.name_test_enabled
                    optional: true
                test_disabled_transform:
                  enabled: _HT?(index . "$").Values.hull.config.specific.switch_enabled_off
                  configMapRef:                  
                    name: test_disabled_transform
                    optional: true
                test_enabled_transform:
                  enabled: _HT?(index . "$").Values.hull.config.specific.switch_enabled_on
                  configMapRef:
                    name: _HT!{{ (index . "$").Values.hull.config.specific.name_test_enabled }}_transform
                    optional: true
                test_enabled_missing:
                  configMapRef:
                    name: _HT!{{ (index . "$").Values.hull.config.specific.name_test_enabled }}_missing
                    optional: true
              ports:
                _HT!:
                  "_": |-
                    {
                      test_one: { containerPort: 10254, protocol: SCTP },
                      test_two: { containerPort: 10255, protocol: UDP }
                    }
                test_three:
                  containerPort: 10256
                  protocol: SCTP
            test_enabled_transform:
              enabled: _HT?(index . "$").Values.hull.config.specific.switch_enabled_on
              image:
                repository: my/image/repo
                tag: "99.9"
              command:
              - _HT![ {{ (printf "%s_%s" "test_enabled" "transform") }} ]
            test_disabled_transform:
              enabled: _HT?(index . "$").Values.hull.config.specific.switch_enabled_off
              command:
              - test_disabled_transform
            test_enabled_missing:
              image:
                repository: quay.io/external_app
                tag: "latest"
              command:
              - _HT! [ {{ (printf "%s_%s" "test_enabled" "missing") }} ]
              
      transformation-doc-examples:
        pod:
          containers:
            
            array_form:
              image:
                repository: my/image/repo
                tag: "99.9"
              command: _HT![ 
                  {{ (index . "$").Values.hull.config.specific.some_referenced_value }}, 
                  "another_value",
                  "and_another_value"
                ]
            
            bool_variants:
              image:
                repository: my/image/repo
                tag: "99.9"
              env:
                bool_field:
                  enabled: _HT?and (index . "$").Values.hull.config.specific.switch_one_enabled (index . "$").Values.hull.config.specific.switch_two_enabled
            
            external:
              image:
                repository: quay.io/external_app
                tag: "latest"

            full_example:
              image:
                repository: quay.io/external_app
                tag: "latest"
              args: _HT![
                  {{ if (index . "$").Values.hull.config.specific.if_this_arg_is_defined }}
                  "{{ (index . "$").Values.hull.config.specific.if_this_arg_is_defined }}",
                  "{{ (index . "$").Values.hull.config.specific.then_add_this_arg }}",
                  {{ end }}
                  {{ if not (index . "$").Values.hull.config.specific.if_this_arg_is_not_defined }}
                  "{{ (index . "$").Values.hull.config.specific.then_use_this_arg }}"
                  {{ end }}
                ]

            get_variants:
              image:
                repository: quay.io/external_app
                tag: "latest"
              env:
                string_defined:
                  enabled: true
                  value: _HT*hull.config.specific.string_defined
                string_empty:
                  enabled: true
                  value: _HT*hull.config.specific.string_empty
                string_undefined:
                  enabled: true
                  value: _HT*hull.config.specific.string_undefined
              envFrom:
                bool_defined_false:
                  configMapRef:
                    name: bool_defined_false
                    staticName: true
                    optional: _HT*hull.config.specific.bool_defined_false
                bool_defined_true:
                  configMapRef:
                    name: bool_defined_true
                    staticName: true
                    optional: _HT*hull.config.specific.bool_defined_true
                #bool_undefined:
                #  configMapRef:
                #    name: bool_undefined
                #    staticName: true
                #    optional: _HT*hull.config.specific.bool_undefined
              ports:
                number_defined: 
                  containerPort: _HT*hull.config.specific.number_defined
                #number_undefined: 
                #  containerPort: _HT*hull.config.specific.number_undefined

            internal_one:
              image:
                registry: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.get>>><<<REFERENCE=hull.config.specific.globalRegistry>>>" # here it is used
                repository: internal_app1
                tag: "latest"

            internal_two:
              image: 
                registry: _HT*hull.config.specific.globalRegistry # and here
                repository: internal_app2
                tag: "latest"

            makefullname_variants:
              image:
                repository: quay.io/external_app
                tag: "latest"
              env:
                fullname:
                  value: _HT^component-name

            tpl_variants:
              image:
                repository: quay.io/external_app
                tag: "latest"
              env:
                tpl_string:
                  value: _HT!{{ printf "%s-%s" (index . "$").Values.hull.config.specific.port_one (index . "$").Values.hull.config.specific.port_two }}
              command:
              - _HT!
                  [ 
                    {{ (index . "$").Values.hull.config.specific.command_one }}, 
                    {{ (index . "$").Values.hull.config.specific.command_two }}
                  ]
              ports:
                _HT!:
                  "_": |-
                    {
                      first: { containerPort: {{ (index . "$").Values.hull.config.specific.port_one }} },
                      second: { containerPort: {{ (index . "$").Values.hull.config.specific.port_two }} }
                    }

      complex-gets:
        annotations: _HT*hull.config.specific.annotations_dict
        pod:
          containers:
            main:
              image:
                repository: my/image/repo
                tag: "99.9"
              livenessProbe: _HT*hull.config.specific.liveness_probe
              args: _HT*hull.config.specific.args_array
            deferred: _HT*hull.config.specific.deferred_container

      pod-get:
        pod: _HT*hull.config.specific.pod_spec

      volume-active-selection:
        pod:
          containers:
            test:
              enabled: true
              image:
                repository: quay.io/external_app
                tag: "latest"
              command:
                - test_enabled
          volumes:
            active_1:
              active: hostPath
              secret:
                secretName: test_secret
              configMap:
                name: test_configmap
              hostPath:
                path: /the_path_one
            active_2:
              active: secret
              secret:
                secretName: test_secret
              configMap:
                name: test_configmap
              hostPath:
                path: /the_path
            active_3:
              active: persistentVolumeClaim
              secret:
                secretName: test_secret
              configMap:
                name: test_configmap
              persistentVolumeClaim:
                claimName: the_claim
              hostPath:
                path: /the_path
            none_active_prefer_configmap:
              secret:
                secretName: test_secret
              configMap:
                name: test_configmap
              emptyDir: {}
            none_active_prefer_secret:
              secret:
                secretName: test_secret
              emptyDir: {}

      hashing-pod-volumemounts:
        pod:
          initContainers:
            one-configmap:
              image:
                repository: my/image/repo
                tag: "99.9"
              volumeMounts:
                configmap-one-all:
                  name: configmap-one
                  mountPath: /one
                  hashsumAnnotation: true
                configmap-one-inline-one.json:
                  name: configmap-one
                  mountPath: /one/subpath.json
                  subPath: configmap-one-inline-one.json
                  hashsumAnnotation: true
                configmap-one-path-one.txt:
                  name: configmap-one
                  mountPath: /one/subpath.txt
                  subPath: configmap-one-path-one.txt
                  hashsumAnnotation: true
            two-configmap:
              image:
                repository: my/image/repo
                tag: "99.9"
              volumeMounts:
                configmap-two-inline-one.json:
                  name: configmap-two
                  mountPath: /two/subpath.json
                  subPath: configmap-two-inline-one.json
                  hashsumAnnotation: true
                configmap-two-path-one.txt:
                  name: configmap-two
                  mountPath: /two/subpath.txt
                  subPath: configmap-two-path-one.txt
                  hashsumAnnotation: false
            three-configmap:
              image:
                repository: my/image/repo
                tag: "99.9"
              volumeMounts:
                configmap-three-path-one.txt:
                  name: configmap-three
                  mountPath: /three/subpath.txt
                  subPath: configmap-three-path-one.txt
                configmap-three-path-two.txt:
                  name: configmap-three
                  mountPath: /three/subpath.txt
                  subPath: configmap-three-path-two.txt
                  hashsumAnnotation: false
                configmap-three-inline-one.json:
                  name: configmap-three
                  mountPath: /three/subpath.txt
                  subPath: configmap-three-inline-one.json
                  hashsumAnnotation: true
                configmap-three-inline-two.json:
                  name: configmap-three
                  mountPath: /three/subpath.txt
                  subPath: configmap-three-inline-two.json
            one-secret:
              image:
                repository: my/image/repo
                tag: "99.9"
              volumeMounts:
                secret-one-all:
                  name: secret-one
                  mountPath: /one
                  hashsumAnnotation: true
                secret-one-inline-one.json:
                  name: secret-one
                  mountPath: /one/subpath.json
                  subPath: secret-one-inline-one.json
                  hashsumAnnotation: true
                secret-one-path-one.txt:
                  name: secret-one
                  mountPath: /one/subpath.txt
                  subPath: secret-one-path-one.txt
                  hashsumAnnotation: true
            two-secret:
              image:
                repository: my/image/repo
                tag: "99.9"
              volumeMounts:
                secret-two-inline-one.json:
                  name: secret-two
                  mountPath: /two/subpath.json
                  subPath: secret-two-inline-one.json
                  hashsumAnnotation: true
                secret-two-path-one.txt:
                  name: secret-two
                  mountPath: /two/subpath.txt
                  subPath: secret-two-path-one.txt
                  hashsumAnnotation: false
            three-secret:
              image:
                repository: my/image/repo
                tag: "99.9"
              volumeMounts:
                secret-three-path-one.txt:
                  name: secret-three
                  mountPath: /three/subpath.txt
                  subPath: secret-three-path-one.txt
                secret-three-path-two.txt:
                  name: secret-three
                  mountPath: /three/subpath.txt
                  subPath: secret-three-path-two.txt
                  hashsumAnnotation: false
                secret-three-inline-one.json:
                  name: secret-three
                  mountPath: /three/subpath.json
                  subPath: secret-three-inline-one.json
                  hashsumAnnotation: true
                secret-three-inline-two.json:
                  name: secret-three
                  mountPath: /three/subpath.txt
                  subPath: secret-three-inline-two.json
          containers:
            one-configmap:
              image:
                repository: my/image/repo
                tag: "99.9"
              volumeMounts:
                configmap-one-inline-two.json:
                  name: configmap-one
                  mountPath: /one/subpath.json
                  subPath: configmap-one-inline-two.json
                configmap-one-path-two.txt:
                  name: configmap-one
                  mountPath: /one/subpath.txt
                  subPath: configmap-one-path-two.txt
            two-configmap:
              image:
                repository: my/image/repo
                tag: "99.9"
              volumeMounts:
                configmap-two-inline-two.json:
                  name: configmap-two
                  mountPath: /two/subpath.json
                  subPath: configmap-two-inline-two.json
                  hashsumAnnotation: false
                configmap-two-path-two.txt:
                  name: configmap-two
                  mountPath: /two/subpath.txt
                  subPath: configmap-two-path-two.txt
                  hashsumAnnotation: true
            three-configmap:
              image:
                repository: my/image/repo
                tag: "99.9"
              volumeMounts:
                configmap-three-path-one.txt:
                  name: configmap-three
                  mountPath: /three/subpath.txt
                  subPath: configmap-three-path-one.txt
                  hashsumAnnotation: true
                configmap-three-path-two.txt:
                  name: configmap-three
                  mountPath: /three/subpath.txt
                  subPath: configmap-three-path-two.txt
                  hashsumAnnotation: false
                configmap-three-inline-one.json:
                  name: configmap-three
                  mountPath: /three/subpath.json
                  subPath: configmap-three-inline-one.json
                configmap-three-inline-two.json:
                  name: configmap-three
                  mountPath: /three/subpath.json
                  subPath: configmap-three-inline-two.json
                  hashsumAnnotation: false
            one-secret:
              image:
                repository: my/image/repo
                tag: "99.9"
              volumeMounts:
                secret-one-inline-two.json:
                  name: secret-one
                  mountPath: /one/subpath.json
                  subPath: secret-one-inline-two.json
                secret-one-path-two.txt:
                  name: secret-one
                  mountPath: /one/subpath.txt
                  subPath: secret-one-path-two.txt
            two-secret:
              image:
                repository: my/image/repo
                tag: "99.9"
              volumeMounts:
                secret-two-inline-two.json:
                  name: secret-two
                  mountPath: /two/subpath.json
                  subPath: secret-two-inline-two.json
                  hashsumAnnotation: false
                secret-two-path-two.txt:
                  name: secret-two
                  mountPath: /two/subpath.json
                  subPath: secret-two-path-two.txt
                  hashsumAnnotation: true
            three-secret:
              image:
                repository: my/image/repo
                tag: "99.9"
              volumeMounts:
                secret-three-path-one.txt:
                  name: secret-three
                  mountPath: /three/subpath.txt
                  subPath: secret-three-path-one.txt
                  hashsumAnnotation: true
                secret-three-path-two.txt:
                  name: secret-three
                  mountPath: /three/subpath.txt
                  subPath: secret-three-path-two.txt
                  hashsumAnnotation: false
                secret-three-inline-one.json:
                  name: secret-three
                  mountPath: /three/subpath.json
                  subPath: secret-three-inline-one.json
                secret-three-inline-two.json:
                  name: secret-three
                  mountPath: /three/subpath.json
                  subPath: secret-three-inline-two.json
                  hashsumAnnotation: false
          volumes:
            configmap-one:
              configMap:
                name: configmap-one
            configmap-two:
              configMap:
                name: configmap-two
            configmap-three:
              configMap:
                name: configmap-three
            secret-one:
              secret:
                secretName: secret-one
            secret-two:
              secret:
                secretName: secret-two
            secret-three:
              secret:
                secretName: secret-three
            other:
              hostPath: 
                path: /the_path_one

      hashing-pod-env:
        pod:
          initContainers:
            one-configmap:
              image:
                repository: my/image/repo
                tag: "99.9"
              envFrom:
                configmap-one:
                  configMapRef:
                    name: configmap-one
                    hashsumAnnotation: true
              env:
                configmap-one-inline-one:
                  valueFrom:
                    configMapKeyRef:
                      name: configmap-one
                      key: configmap-one-inline-one.json
                      hashsumAnnotation: true
                configmap-one-path-one:
                  valueFrom:
                    configMapKeyRef:
                      name: configmap-one
                      key: configmap-one-inline-one.json
                      hashsumAnnotation: true
            two-configmap:
              image:
                repository: my/image/repo
                tag: "99.9"
              env:
                configmap-two-inline-one.json:
                  valueFrom:
                    configMapKeyRef:
                      name: configmap-two
                      key: configmap-two-inline-one.json
                      hashsumAnnotation: true
                configmap-two-path-one.txt:
                  valueFrom:
                    configMapKeyRef:
                      name: configmap-two
                      key: configmap-two-path-one.txt
                      hashsumAnnotation: false
            three-configmap:
              image:
                repository: my/image/repo
                tag: "99.9"
              env:
                configmap-three-path-one:
                  valueFrom:
                    configMapKeyRef:
                      name: configmap-three
                      key: configmap-three-path-one.txt
                configmap-three-path-two.txt:
                  valueFrom:
                    configMapKeyRef:
                      name: configmap-three
                      key: configmap-three-path-two.txt
                      hashsumAnnotation: false
                configmap-three-inline-one.json:
                  valueFrom:
                    configMapKeyRef:
                      name: configmap-three
                      key: configmap-three-inline-one.json
                      hashsumAnnotation: true
                configmap-three-inline-two.json:
                  valueFrom:
                    configMapKeyRef:
                      name: configmap-three
                      key: configmap-three-inline-two.json
            one-secret:
              image:
                repository: my/image/repo
                tag: "99.9"
              envFrom:
                secret-one:
                  secretRef:
                    name: secret-one
                    hashsumAnnotation: true
              env:
                secret-one-inline-one.json:
                  valueFrom:
                    secretKeyRef:
                      name: secret-one
                      key: secret-one-inline-one.json
                      hashsumAnnotation: true
                secret-one-path-one.json:
                  valueFrom:
                    secretKeyRef:
                      name: secret-one
                      key: secret-one-inline-one.json
                      hashsumAnnotation: true
            two-secret:
              image:
                repository: my/image/repo
                tag: "99.9"
              env:
                secret-two-inline-one.json:
                  valueFrom:
                    secretKeyRef:
                      name: secret-two
                      key: secret-two-inline-one.json
                      hashsumAnnotation: true
                secret-two-path-one.txt:
                  valueFrom:
                    secretKeyRef:
                      name: secret-two
                      key: secret-two-path-one.txt
                      hashsumAnnotation: false
            three-secret:
              image:
                repository: my/image/repo
                tag: "99.9"
              env:
                secret-three-path-one.txt:
                  valueFrom:
                    secretKeyRef:
                      name: secret-three
                      key: secret-three-path-one.txt
                secret-three-path-two.txt:
                  valueFrom:
                    secretKeyRef:
                      name: secret-three
                      key: secret-three-path-two.txt
                      hashsumAnnotation: false
                secret-three-inline-one.json:
                  valueFrom:
                    secretKeyRef:
                      name: secret-three
                      key: secret-three-inline-one.json
                      hashsumAnnotation: true
                secret-three-inline-two.json:
                  valueFrom:
                    secretKeyRef:
                      name: secret-three
                      key: secret-three-inline-two.json
          containers:
            one-configmap:
              image:
                repository: my/image/repo
                tag: "99.9"
              env:
                configmap-one-inline-two.json:
                  valueFrom:
                    configMapKeyRef:
                      name: configmap-one
                      key: configmap-one-inline-two.json
                configmap-one-path-two.txt:
                  valueFrom:
                    configMapKeyRef:
                      name: configmap-one
                      key: configmap-one-path-two.txt
            two-configmap:
              image:
                repository: my/image/repo
                tag: "99.9"
              env:
                configmap-two-inline-two.json:
                  valueFrom:
                    configMapKeyRef:
                      name: configmap-two
                      key: configmap-two-inline-two.json
                      hashsumAnnotation: false
                configmap-two-path-two.txt:
                  valueFrom:
                    configMapKeyRef:
                      name: configmap-two
                      key: configmap-two-path-two.txt
                      hashsumAnnotation: true
            three-configmap:
              image:
                repository: my/image/repo
                tag: "99.9"
              env:                
                configmap-three-path-one.txt:
                  valueFrom:
                    configMapKeyRef:
                      name: configmap-three
                      key: configmap-three-path-one.txt
                      hashsumAnnotation: true
                configmap-three-path-two.txt:
                  valueFrom:
                    configMapKeyRef:
                      name: configmap-three
                      key: configmap-three-path-two.txt
                      hashsumAnnotation: false
                configmap-three-inline-one.json:
                  valueFrom:
                    configMapKeyRef:
                      name: configmap-three
                      key: configmap-three-inline-one.json
                configmap-three-inline-two.json:
                  valueFrom:
                    configMapKeyRef:
                      name: configmap-three
                      key: configmap-three-inline-two.json
                      hashsumAnnotation: false
            one-secret:
              image:
                repository: my/image/repo
                tag: "99.9"
              env:
                secret-one-inline-two.json:
                  valueFrom:
                    secretKeyRef:
                      name: secret-one
                      key: secret-one-inline-two.json
                secret-one-path-two.txt:
                  valueFrom:
                    secretKeyRef:
                      name: secret-one
                      key: secret-one-path-two.txt
            two-secret:
              image:
                repository: my/image/repo
                tag: "99.9"
              env:
                secret-two-inline-two.json:
                  valueFrom:
                    secretKeyRef:
                      name: secret-two
                      key: secret-two-inline-two.json
                      hashsumAnnotation: false
                secret-two-path-two.txt:
                  valueFrom:
                    secretKeyRef:
                      name: secret-two
                      key: secret-two-path-two.txt
                      hashsumAnnotation: true
            three-secret:
              image:
                repository: my/image/repo
                tag: "99.9"
              env:                
                secret-three-path-one.txt:
                  valueFrom:
                    secretKeyRef:
                      name: secret-three
                      key: secret-three-path-one.txt
                      hashsumAnnotation: true
                secret-three-path-two.txt:
                  valueFrom:
                    secretKeyRef:
                      name: secret-three
                      key: secret-three-path-two.txt
                      hashsumAnnotation: false
                secret-three-inline-one.json:
                  valueFrom:
                    secretKeyRef:
                      name: secret-three
                      key: secret-three-inline-one.json
                secret-three-inline-two.json:
                  valueFrom:
                    secretKeyRef:
                      name: secret-three
                      key: secret-three-inline-two.json
                      hashsumAnnotation: false

      pod-partial-values:
        enabled: false
        pod: |-
          _HT!{
            "activeDeadlineSeconds": 5
          }

      pod-combine-values:
        sources:
        - pod-partial-values
        pod:
          containers:
            main:
              image:
                repository: somerepo
                tag: "latest"

      pull-secrets-override-empty-array:
        pod:
          imagePullSecrets: []
          containers:
            my-pod:
              image:
                repository: hello-world

      pull-secrets-override-nonempty-array:
        pod:
          imagePullSecrets: 
          - name: reg1
          - name: reg2
          containers:
            my-pod:
              image:
                repository: hello-world

      pull-secrets-tpl-empty-array:
        pod:
          imagePullSecrets: |-
            _HT![ ]
          containers:
            my-pod:
              image:
                repository: hello-world

      pull-secrets-tpl-nonempty-array:
        pod:
          imagePullSecrets: |-
            _HT![
              { "name": "tpl1" },
              { "name": "tpl2" },
            ]
          containers:
            my-pod:
              image:
                repository: hello-world

      pull-secrets-include-empty-array:
        pod:
          imagePullSecrets: _HT/result/hull.include.test.imagepullsecrets.emptyarray
          containers:
            my-pod:
              image:
                repository: hello-world

      pull-secrets-include-nonempty-array:
        pod:
          imagePullSecrets: _HT/result/hull.include.test.imagepullsecrets.nonemptyarray
          containers:
            my-pod:
              image:
                repository: hello-world

      pull-secrets-include-empty-flow:
        pod:
          imagePullSecrets: _HT/result/hull.include.test.imagepullsecrets.emptyflow
          containers:
            my-pod:
              image:
                repository: hello-world

      pull-secrets-include-nonempty-flow:
        pod:
          imagePullSecrets: _HT/result/hull.include.test.imagepullsecrets.nonemptyflow
          containers:
            my-pod:
              image:
                repository: hello-world

      pull-secrets-include-empty-list:
        pod:
          imagePullSecrets: _HT/result/hull.include.test.imagepullsecrets.emptylist
          containers:
            my-pod:
              image:
                repository: hello-world

      pull-secrets-include-nonempty-list:
        pod:
          imagePullSecrets: _HT/result/hull.include.test.imagepullsecrets.nonemptylist
          containers:
            my-pod:
              image:
                repository: hello-world

      test-serializing:
        pod:
          containers:
            my-pod:
              image:
                repository: my/image/repo
                tag: "99.9"
              env:
                test-include-code-list-empty: 
                  value: _HT/result/hull.include.test.imagepullsecrets.emptylist
                test-include-code-list-empty-json: 
                  value: _HT/toJson|result/hull.include.test.imagepullsecrets.emptylist
                test-include-code-list-empty-prettyjson: 
                  value: _HT/toPrettyJson|result/hull.include.test.imagepullsecrets.emptylist
                test-include-code-list-empty-rawjson: 
                  value: _HT/toRawJson|result/hull.include.test.imagepullsecrets.emptylist
                test-include-code-list-empty-yaml: 
                  value: _HT/toYaml|result/hull.include.test.imagepullsecrets.emptylist
                test-include-code-list-empty-string: 
                  value: _HT/toString|result/hull.include.test.imagepullsecrets.emptylist
                test-include-code-list-non-empty: 
                  value: _HT/result/hull.include.test.imagepullsecrets.nonemptylist
                test-include-code-list-non-empty-json: 
                  value: _HT/toJson|result/hull.include.test.imagepullsecrets.nonemptylist
                test-include-code-list-non-empty-prettyjson: 
                  value: _HT/toPrettyJson|result/hull.include.test.imagepullsecrets.nonemptylist
                test-include-code-list-non-empty-rawjson: 
                  value: _HT/toRawJson|result/hull.include.test.imagepullsecrets.nonemptylist
                test-include-code-list-non-empty-yaml: 
                  value: _HT/toYaml|result/hull.include.test.imagepullsecrets.nonemptylist
                test-include-code-list-non-empty-string: 
                  value: _HT/toString|result/hull.include.test.imagepullsecrets.nonemptylist
                test-include-flow-dict: 
                  value: _HT/hull.include.test.dockerconfigjson.flow
                test-include-code-dict: 
                  value: _HT/hull.include.test.dockerconfigjson.code
                test-include-code-dict-json: 
                  value: _HT/toJson|hull.include.test.dockerconfigjson.code
                test-include-code-dict-prettyjson: 
                  value: _HT/toPrettyJson|hull.include.test.dockerconfigjson.code
                test-include-code-dict-rawjson: 
                  value: _HT/toRawJson|hull.include.test.dockerconfigjson.code
                test-include-code-dict-yaml: 
                  value: _HT/toYaml|hull.include.test.dockerconfigjson.code
                test-include-code-dict-string: 
                  value: _HT/toString|hull.include.test.dockerconfigjson.code
                test-include-code-dict-quote: 
                  value: _HT/hull.include.test.dockerconfigjson.code
                test-include-code-dict-quote-json: 
                  value: _HT/toJson|hull.include.test.dockerconfigjson.code.quote
                test-include-code-dict-quote-prettyjson: 
                  value: _HT/toPrettyJson|hull.include.test.dockerconfigjson.code.quote
                test-include-code-dict-quote-rawjson: 
                  value: _HT/toRawJson|hull.include.test.dockerconfigjson.code.quote
                test-include-code-dict-quote-yaml: 
                  value: _HT/toYaml|hull.include.test.dockerconfigjson.code.quote
                test-include-code-dict-quote-string: 
                  value: _HT/toString|hull.include.test.dockerconfigjson.code.quote
                test-get-dict: 
                  value: _HT*hull.config.specific.dict_mixed_content
                test-get-dict-json: 
                  value: _HT*toJson|hull.config.specific.dict_mixed_content
                test-get-dict-prettyjson: 
                  value: _HT*toPrettyJson|hull.config.specific.dict_mixed_content
                test-get-dict-rawjson: 
                  value: _HT*toRawJson|hull.config.specific.dict_mixed_content
                test-get-dict-yaml: 
                  value: _HT*toYaml|hull.config.specific.dict_mixed_content
                test-get-dict-string: 
                  value: _HT*toString|hull.config.specific.dict_mixed_content
                test-get-list: 
                  value: _HT*hull.config.specific.dict_mixed_content.list
                test-get-list-json: 
                  value: _HT*toJson|hull.config.specific.dict_mixed_content.list
                test-get-list-prettyjson: 
                  value: _HT*toPrettyJson|hull.config.specific.dict_mixed_content.list
                test-get-list-rawjson: 
                  value: _HT*toRawJson|hull.config.specific.dict_mixed_content.list
                test-get-list-yaml: 
                  value: _HT*toYaml|hull.config.specific.dict_mixed_content.list
                test-get-list-string: 
                  value: _HT*toString|hull.config.specific.dict_mixed_content.list
                
