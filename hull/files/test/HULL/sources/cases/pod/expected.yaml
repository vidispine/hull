test-get-dict: map[boolean:true dict:map[key:value] list:[54 false map[subdict:map[a:b boolish:false c:d inner_list:[inner_1 inner_2 inner_3] int:398]]] number:45]
test-get-dict-json: '{"boolean":true,"dict":{"key":"value"},"list":[54,false,{"subdict":{"a":"b","boolish":false,"c":"d","inner_list":["inner_1","inner_2","inner_3"],"int":398}}],"number":45}'
test-get-dict-prettyjson: |-
  {
    "boolean": true,
    "dict": {
      "key": "value"
    },
    "list": [
      54,
      false,
      {
        "subdict": {
          "a": "b",
          "boolish": false,
          "c": "d",
          "inner_list": [
            "inner_1",
            "inner_2",
            "inner_3"
          ],
          "int": 398
        }
      }
    ],
    "number": 45
  }
test-get-dict-rawjson: '{"boolean":true,"dict":{"key":"value"},"list":[54,false,{"subdict":{"a":"b","boolish":false,"c":"d","inner_list":["inner_1","inner_2","inner_3"],"int":398}}],"number":45}'
test-get-dict-string: map[boolean:true dict:map[key:value] list:[54 false map[subdict:map[a:b boolish:false c:d inner_list:[inner_1 inner_2 inner_3] int:398]]] number:45]
test-get-dict-yaml: |-
  boolean: true
  dict:
    key: value
  list:
  - 54
  - false
  - subdict:
      a: b
      boolish: false
      c: d
      inner_list:
      - inner_1
      - inner_2
      - inner_3
      int: 398
  number: 45
test-get-list: '[54 false map[subdict:map[a:b boolish:false c:d inner_list:[inner_1 inner_2 inner_3] int:398]]]'
test-get-list-json: '[54,false,{"subdict":{"a":"b","boolish":false,"c":"d","inner_list":["inner_1","inner_2","inner_3"],"int":398}}]'
test-get-list-prettyjson: |-
  [
    54,
    false,
    {
      "subdict": {
        "a": "b",
        "boolish": false,
        "c": "d",
        "inner_list": [
          "inner_1",
          "inner_2",
          "inner_3"
        ],
        "int": 398
      }
    }
  ]
test-get-list-rawjson: '[54,false,{"subdict":{"a":"b","boolish":false,"c":"d","inner_list":["inner_1","inner_2","inner_3"],"int":398}}]'
test-get-list-string: '[54 false map[subdict:map[a:b boolish:false c:d inner_list:[inner_1 inner_2 inner_3] int:398]]]'
test-get-list-yaml: |-
  - 54
  - false
  - subdict:
      a: b
      boolish: false
      c: d
      inner_list:
      - inner_1
      - inner_2
      - inner_3
      int: 398
test-include-code-dict: map[auths:map[my-registry:map[auth:dXNlcm5hbWU6cGFzc3dvcmQ=
  email:email password:password username:username]]]
test-include-code-dict-json: '{"auths":{"my-registry":{"auth":"dXNlcm5hbWU6cGFzc3dvcmQ=","email":"email","password":"password","username":"username"}}}'
test-include-code-dict-prettyjson: |-
  {
    "auths": {
      "my-registry": {
        "auth": "dXNlcm5hbWU6cGFzc3dvcmQ=",
        "email": "email",
        "password": "password",
        "username": "username"
      }
    }
  }
test-include-code-dict-quote: map[auths:map[my-registry:map[auth:dXNlcm5hbWU6cGFzc3dvcmQ=
  email:email password:password username:username]]]
test-include-code-dict-quote-json: '{"auths":{"my-registry":{"auth":"dXNlcm5hbWU6cGFzc3dvcmQ=","email":"email","password":"password","username":"username"}}}'
test-include-code-dict-quote-prettyjson: |-
  {
    "auths": {
      "my-registry": {
        "auth": "dXNlcm5hbWU6cGFzc3dvcmQ=",
        "email": "email",
        "password": "password",
        "username": "username"
      }
    }
  }
test-include-code-dict-quote-rawjson: '{"auths":{"my-registry":{"auth":"dXNlcm5hbWU6cGFzc3dvcmQ=","email":"email","password":"password","username":"username"}}}'
test-include-code-dict-quote-string: map[auths:map[my-registry:map[auth:dXNlcm5hbWU6cGFzc3dvcmQ=
  email:email password:password username:username]]]
test-include-code-dict-quote-yaml: |-
  auths:
    my-registry:
      auth: dXNlcm5hbWU6cGFzc3dvcmQ=
      email: email
      password: password
      username: username
test-include-code-dict-rawjson: '{"auths":{"my-registry":{"auth":"dXNlcm5hbWU6cGFzc3dvcmQ=","email":"email","password":"password","username":"username"}}}'
test-include-code-dict-string: map[auths:map[my-registry:map[auth:dXNlcm5hbWU6cGFzc3dvcmQ=
  email:email password:password username:username]]]
test-include-code-dict-yaml: |-
  auths:
    my-registry:
      auth: dXNlcm5hbWU6cGFzc3dvcmQ=
      email: email
      password: password
      username: username
test-include-code-list-empty: '[]'
test-include-code-list-empty-json: '[]'
test-include-code-list-empty-prettyjson: '[]'
test-include-code-list-empty-rawjson: '[]'
test-include-code-list-empty-string: '[]'
test-include-code-list-empty-yaml: '[]'
test-include-code-list-non-empty: '[map[name:listreg1] map[name:listreg2]]'
test-include-code-list-non-empty-json: '[{"name":"listreg1"},{"name":"listreg2"}]'
test-include-code-list-non-empty-prettyjson: |-
  [
    {
      "name": "listreg1"
    },
    {
      "name": "listreg2"
    }
  ]
test-include-code-list-non-empty-rawjson: '[{"name":"listreg1"},{"name":"listreg2"}]'
test-include-code-list-non-empty-string: '[map[name:listreg1] map[name:listreg2]]'
test-include-code-list-non-empty-yaml: |-
  - name: listreg1
  - name: listreg2
test-include-flow-dict: map[auths:map[my-registry:map[auth:dXNlcm5hbWU6cGFzc3dvcmQ=
  email:email password:password username:username]]]
tpl_bool_get_bool_get_get: |-
  (index (index (index (index (index . "$").Values "hull") "config") "specific") "bool_defined_true")
tpl_raw_string: |-
  (include "hull.util.transformation.convert" (dict "SOURCE" (index (index (index (index (index . "$").Values "hull") "config") "specific") "port_one") "SERIALIZER" "toJson"))
tpl_raw_string_dashes: |-
  (index (index (index (index (index (index (index (index (index (index . "$").Values "hull") "config") "specific") "port-one") 1) "port-two") 2) "port-three") 3)
tpl_raw_string_dashes_get: |-
  (index (index (index . \"$\").Values.hull.config.specific.port-one \"port-two\") \"port-three\")
tpl_raw_string_dashes_index: |-
  (index (index (index (index (index (index (index (index (index (index . "$").Values "hull") "config") "specific") "port-one") 1) "port-two") 2) "port-three") 3)
tpl_raw_string_root_access: |-
  (index (index (index . "$") "Release") "Name")
tpl_wrap_raw_string: |-
  (include "hull.util.transformation.convert" (dict "SOURCE" (index (index (index (index (index . "$").Values "hull") "config") "specific") "port_one") "SERIALIZER" "toJson"))
tpl_wrap_zero_to_ninetynine: |-
  0-1-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31-32-33-34-35-36-37-38-39-40-41-42-43-44-45-46-47-48-49-50-51-52-53-54-55-56-57-58-59-60-61-62-63-64-65-66-67-68-69-70-71-72-73-74-75-76-77-78-79-80-81-82-83-84-85-86-87-88-89-90-91-92-93-94-95-96-97-98-99
int-bool-dict-array-ht-tpl-get-raw: |-
  (index (index (index (index (index . "$").Values "hull") "config") "specific") "if_this_arg_is_not_defined")
tpl_include_in_tpl_transformation_hundred: |-
  0-1-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31-32-33-34-35-36-37-38-39-40-41-42-43-44-45-46-47-48-49-50-51-52-53-54-55-56-57-58-59-60-61-62-63-64-65-66-67-68-69-70-71-72-73-74-75-76-77-78-79-80-81-82-83-84-85-86-87-88-89-90-91-92-93-94-95-96-97-98-99
tpl_include_in_tpl_transformation_many: |-
  hull-test-1.31.0 !! hull-test-one-arg-include !!! ~_HULL_ERROR_:dummy_error_type:dummy_error_message !!!!
tpl_include_in_tpl_transformation_mixed_with_get: |-
  0hull-test-1.31.033hull-test-one-arg-include66~_HULL_ERROR_:dummy_error_type:dummy_error_message99-split-hull-test-1.31.0 is the chart reference value
tpl_include_in_tpl_transformation_mixed_with_get_raw: |-
  (include "hull.util.transformation.get" (dict "REFERENCE" "hull.config.specific.hundred.its-00" "RETURN_TEMPLATE_STRING" true  "PARENT_CONTEXT" (index . "$"))) (include "hull.util.transformation.include" (dict "CONTENT" "hull.metadata.chartref" "RETURN_TEMPLATE_STRING" true  "PARENT_CONTEXT" (index . "$"))) (include "hull.util.transformation.get" (dict "REFERENCE" "hull.config.specific.hundred.its-33" "RETURN_TEMPLATE_STRING" true  "PARENT_CONTEXT" (index . "$"))) (include "hull.util.transformation.get" (dict "REFERENCE" "hull.config.specific.hundred.its-66" "RETURN_TEMPLATE_STRING" true  "PARENT_CONTEXT" (index . "$"))) (include "hull.util.transformation.get" (dict "REFERENCE" "hull.config.specific.hundred.its-99" "RETURN_TEMPLATE_STRING" true  "PARENT_CONTEXT" (index . "$")))
tpl_include_in_tpl_transformation_simple: |-
  hull-test-tpl-transformation-include
