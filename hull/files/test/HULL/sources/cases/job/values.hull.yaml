################################ 
### Example values.yaml with all features applied
################################

###################################################
### CONFIG
hull:
  config:
    general:
      data:
        installation:
          config:
            customCaCertificates: {}

#  config:
#    general:  
#      data: {} 
#      metadata:
#        labels:         
#          custom: 
#            general_custom_label_1: General Custom Label 1
#            general_custom_label_2: General Custom Label 2
#            general_custom_label_3: General Custom Label 3
#        annotations: 
#          custom:
#            general_custom_annotation_1: General Custom Annotation 1
#            general_custom_annotation_2: General Custom Annotation 2
#            general_custom_annotation_3: General Custom Annotation 3
#    specific: {}
  ###################################################
          
  ###################################################
  ### OBJECTS
  objects:
    
  # CONFIGMAPS
    job:
      
      disabled:
        pod:
          containers: {}
        
      metadata-overwrite:
        pod:
          containers: {}
        
      image-name-empty-registry:
        pod:
          containers: 
            main:
              image:
                registry: ""
                repository: my/image/repo

      image-name-registry:
        pod:
          containers:
            main:
              image:
                registry: local.registry
                repository: my/image/repo

      image-name-tag:
        pod:
          containers:
            main:
              image:
                repository: my/image/repo
                tag: "99.9"

      removal-test:
        pod:
          containers:
            keep:
              image:
                repository: my/image/repo
                tag: "99.9"
              ports:
                keep:
                  containerPort: 80
                remove:
                  containerPort: 80
            remove:
              image:
                repository: my/image/repo
                tag: "99.9"
                
      volume-test:
        pod:
          volumes:
            to_be_removed:
              persistentVolumeClaim:
                claimName: remove_me
            
      full-example-deployment:
        annotations:
          example: "Some annotation applied to this deployment full-example-deployment"
        labels:
          example: "Some label applied to this deployment full-example-deployment"
        templateAnnotations:
          example: "Some annotation applied to the template section of this deployment full-example-deployment"
        templateLabels:
          example: "Some label applied to the template section of this deployments full-example-deployment"
        activeDeadlineSeconds: 3
        parallelism: 3        
        pod:
          serviceAccountName: full_example_serviceaccount
          priorityClassName: HIGH
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                podAffinityTerm:
                  labelSelector:                  
                    matchExpressions:
                    - key: "app"
                      operator: In
                      values:
                        - this-server 
                  topologyKey: "kubernetes.io/hostname"
          tolerations: 
          - key: "example-key"
            operator: "Exists"
            effect: "NoSchedule"
          initContainers: 
            full_example_deplyoment_initcontainer:
              image: 
                repository: docker.io/example-docker-init-container
                tag: "2.0"
              imagePullPolicy: IfNotPresent
              ports:
                http:
                  protocol: TCP
                  containerPort: 4345
              env:
                ENV_VAR_1:
                  value: Example ENV for initContainers
                ENV_VAR_2:
                  valueFrom:
                    configMapKeyRef:
                      name: full_example_configmap
                      key: env_var
                ENV_VAR_3:
                  valueFrom:
                    secretKeyRef:
                      name: some-external-secret-in-cluster
                      key: secret-data-key
                      staticName: true                            
                ENV_VAR_4:
                  valueFrom:
                    secretKeyRef:
                      name: full_example_secret
                      key: env_var
                ENV_VAR_5:
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.label.name
                      apiVersion: v2
                ENV_VAR_6:
                  valueFrom:
                    resourceFieldRef:
                      containerName: full_example_deplyoment_container
                      divisor: 2
                      resource: cpu
              envFrom:
                a_configmap:
                  prefix: sourced_envs_prefix
                  configMapRef:
                    name: full_example_configmap
                    optional: false
                another_configmap:
                  prefix: sourced_envs_prefix
                  configMapRef:
                    name: full_example_configmap
                    staticName: true
                some_secret:
                  secretRef:
                    name: full_example_secret
                    optional: true
              command: 
              - "./entrypoint.sh"
              args:
              - "init"
              - "container"
              - "add"
              - "some"
              - "arguments"                            
              livenessProbe: 
                initialDelaySeconds: 30
                periodSeconds: 10
                failureThreshold: 5
                timeoutSeconds: 10
              readinessProbe:
                initialDelaySeconds: 30
                periodSeconds: 10
                failureThreshold: 5
                timeoutSeconds: 10
              resources:
                limits:
                  cpu: "0.99"
                  memory: 3.5Gi
                requests:
                  cpu: "0.5"
                  memory: 1.7Gi           
              volumeMounts:
                full_example_configmap_mount:
                  name: full_example_configmap
                  mountPath: '/etc/init/configmap/all'                
                full_example_configmap_mount_sub_path:
                  name: full_example_configmap
                  mountPath: '/etc/init/configmap.json'
                  subPath: 'volume_sub_path.json' 
                full_example_secret_mount:
                  name: full_example_secret
                  mountPath: '/tmp/init/secret/all'                
                full_example_secret_mount_sub_path:
                  name: full_example_secret
                  mountPath: '/tmp/init/secret.json'
                  subPath: 'volume_sub_path.json'
          containers: 
            full_example_deplyoment_container:
              image: 
                repository: docker.io/example-docker-container
                tag: "1.0"
              imagePullPolicy: Always
              ports:
                http:
                  protocol: TCP
                  containerPort: 80
              env:
                ENV_VAR_1:
                  value: Example ENV for deployment containers
                ENV_VAR_2:
                  valueFrom:
                    configMapKeyRef:
                      name: full_example_configmap
                      key: env_var
                ENV_VAR_3:
                  valueFrom:
                    secretKeyRef:
                      name: some-external-secret-in-cluster
                      key: secret-data-key
                      staticName: true                            
                ENV_VAR_4:
                  valueFrom:
                    secretKeyRef:
                      name: full_example_secret
                      key: env_var        
              command: 
              - "./startscript.sh"
              args:
              - "container"
              - "add"
              - "some"
              - "arguments"               
              livenessProbe: 
                initialDelaySeconds: 11
                periodSeconds: 22
                failureThreshold: 33
                timeoutSeconds: 44
              readinessProbe: 
                initialDelaySeconds: 55
                periodSeconds: 66
                failureThreshold: 77
                timeoutSeconds: 88
              resources:
                limits:
                  cpu: "0.01"
                  memory: 4.4Gi
                requests:
                  cpu: "5.5"
                  memory: 9.9Gi           
            
          volumes:
            full_example_configmap_volume:
              configMap: {}                
            full_example_configmap_external_volume:
              configMap:
                name: external-app-configmap
                staticName: true
            full_example_secret_volume:
              secret: {}                
            full_example_secret_external_volume:
              secret:
                staticName: true

      selector-provided:
        completions: 5
        selector:
          matchLabels:
            test_label: test_value
        pod:
          containers: 
            main:
              image:
                repository: my/image/repo
                tag: "99.9"

      no-selector-provided:
        pod:
          containers: 
            main:
              image:
                repository: my/image/repo
                tag: "99.9"

      mixed-key-transformations:
        pod:
          containers:
            mixed-key-transformations:
              image:
                repository: my/image/repo
                tag: "99.9"
              volumeMounts:
                etcssl:
                  enabled: _HT?(index . "$").Values.hull.config.general.data.installation.config.customCaCertificates
                  name: etcssl
                  mountPath: '/etc/ssl/certs'
                'installation':
                  name: 'installation'
                  mountPath: /script
                custom-installation-files:
                  name: custom-installation-files
                  mountPath: /custom-installation-files
                _HULL_TRANSFORMATION_:
                  NAME: hull.util.transformation.tpl
                  CONTENT: |-
                    {
                      {{ range $certkey, $certvalue := (index . "$").Values.hull.config.general.data.installation.config.customCaCertificates}}
                      "custom-ca-certificates-{{ $certkey }}": 
                        {
                          enabled: true, 
                          name: "certs",
                          mountPath: "/usr/local/share/ca-certificates/custom-ca-certificates-{{ $certkey }}",
                          subPath: "{{ $certkey }}"
                        },
                      {{ end }}
                    }
          volumes:
            installation:
              secret:
                secretName: hull-install
            custom-installation-files:
              secret:
                secretName: custom-installation-files
            etcssl:
              enabled: _HT?(index . "$").Values.hull.config.general.data.installation.config.customCaCertificates
              emptyDir: {}
            certs:
              enabled: _HT?(index . "$").Values.hull.config.general.data.installation.config.customCaCertificates
              secret:
                secretName: "custom-ca-certificates"

###################################################