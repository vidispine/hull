################################ 
### Example values.yaml with all features applied
################################

###################################################
### CONFIG
hull:
  config:
    general:
      globalImageRegistryToFirstRegistrySecretServer: true
      data:
        endpoints:
          vidicore:
            uri:
              api: 
          authenticationService:
            uri:
              api: 
          configPortal:
            uri:
              api: 
              ui: 
              notification: 
    specific:
      ingressClass: haproxy-ingress
      api:
        activeEnvironment:  # DEV, PROD, INT, TRANS
        maxConcurrentConnections: 0  # Maximum concurrent connections allowed in a time (Default '0' to be no limit)
        pathBase: 
      ui:
        pathBase: 
      notification:
        pathBase: 
      git:
        repository:
          path: "the_repo" # Path to Git Repository, this should be in /vpmsmounts
          username: 
          password: 
      rabbitMq: 
        connectionString: 
      authService:
        clientId: "cpInstallerClient"
        clientSecret: 
      database:
        sqlCommandTimeout:  10 # Sql command timeout string.
        host: 
        port: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
          {{- if (eq (index . \"PARENT\").Values.hull.config.specific.database.type \"mssql\") -}}
          1433
          {{- else -}}
          5432
          {{- end -}}
          >>>"
        type: "mssql"
        name: "configportal"
        username: "configportal"
        password: 
        usernamesPostfix: 
        adminUsername: "the_user"
        adminPassword: 
        connectionString: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
          {{- if (eq (index . \"PARENT\").Values.hull.config.specific.database.type \"mssql\") -}}
          Data Source=
          {{- (index . \"PARENT\").Values.hull.config.specific.database.host -}},
          {{- if (eq (index . \"PARENT\").Values.hull.config.specific.database.type \"mssql\") -}}
          1433
          {{- else -}}
          5432
          {{- end -}}
          ;Initial Catalog=
          {{- (index . \"PARENT\").Values.hull.config.specific.database.name -}}
          ;MultipleActiveResultSets=true;Connect Timeout=60
          {{- else -}}
          Server=
          {{- (index . \"PARENT\").Values.hull.config.specific.database.host -}}
          ;Port=
          {{- (index . \"PARENT\").Values.hull.config.specific.database.port -}}
          ;Database=
          {{- (index . \"PARENT\").Values.hull.config.specific.database.name -}},
          {{- end -}}
          ;User ID=
          {{- (index . \"PARENT\").Values.hull.config.specific.database.username -}}
          ;Password=
          {{- (index . \"PARENT\").Values.hull.config.specific.database.password -}};
          >>>"
          
  objects:
    
    configmap:
      application-configmap:
        data:
          dbConnectionString:
            inline: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
              {{ (index . \"PARENT\").Values.hull.config.specific.database.connectionString }}
              >>>"
          dbUserPostfix: # Postfix to be added to all DBUsernames when connecting to DB
            inline: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
              {{ (index . \"PARENT\").Values.hull.config.specific.database.usernamesPostfix }}
              >>>"
          dbAdminUserWithPostfix: # Admin User with Postfix combined
            inline: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
              {{ printf \"%s%s\" (index . \"PARENT\").Values.hull.config.specific.database.adminUsername (index . \"PARENT\").Values.hull.config.specific.database.usernamesPostfix }}
              >>>"
          dbAdminUsername:
            inline: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
              {{ (index . \"PARENT\").Values.hull.config.specific.database.adminUsername }}
              >>>"
          dbAdminPassword:
            inline: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.get>>><<<REFERENCE=hull.config.specific.database.adminPassword>>>"
          rabbitMqConnectionString:
            inline: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
              {{ (index . \"PARENT\").Values.hull.config.specific.rabbitMq.connectionString }}
              >>>"
          cacheDbUsername:
            inline: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
              {{ (index . \"PARENT\").Values.hull.config.specific.database.username }}
              >>>"
          cacheDbPassword:
            inline: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
              {{ (index . \"PARENT\").Values.hull.config.specific.database.password }}
              >>>"
          gitRepositoryPath:
            inline:  "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
              {{ (index . \"PARENT\").Values.hull.config.specific.git.repository.path }}
              >>>"          
          gitRepositoryUsername: 
            inline: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
              {{ (index . \"PARENT\").Values.hull.config.specific.git.repository.username }}
              >>>"
          gitRepositoryPassword: 
            inline: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
              {{ (index . \"PARENT\").Values.hull.config.specific.git.repository.password }}
              >>>"
      azuresecrets:
        data:
          azurestorageaccountname:  # Storage Account Name
            inline: ""
          azurestorageaccountkey:   # Storage Account Key
            inline: ""
      'authservice-token-secret':
        data:
          productClientId: 
            inline: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
              {{ (index . \"PARENT\").Values.hull.config.specific.authService.clientId }}
              >>>"
          productClientSecret: 
            inline: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
              {{ (index . \"PARENT\").Values.hull.config.specific.authService.clientSecret }}
              >>>"
    
    secret:
      application-secret:
        data:
          dbConnectionString:
            inline: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
              {{ (index . \"PARENT\").Values.hull.config.specific.database.connectionString }}
              >>>"
          dbUserPostfix: # Postfix to be added to all DBUsernames when connecting to DB
            inline: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
              {{ (index . \"PARENT\").Values.hull.config.specific.database.usernamesPostfix }}
              >>>"
          dbAdminUserWithPostfix: # Admin User with Postfix combined
            inline: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
              {{ printf \"%s%s\" (index . \"PARENT\").Values.hull.config.specific.database.adminUsername (index . \"PARENT\").Values.hull.config.specific.database.usernamesPostfix }}
              >>>"
          dbAdminUsername:
            inline: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
              {{ (index . \"PARENT\").Values.hull.config.specific.database.adminUsername }}
              >>>"
          dbAdminPassword:
            inline: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.get>>><<<REFERENCE=hull.config.specific.database.adminPassword>>>"
          rabbitMqConnectionString:
            inline: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
              {{ (index . \"PARENT\").Values.hull.config.specific.rabbitMq.connectionString }}
              >>>"
          cacheDbUsername:
            inline: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
              {{ (index . \"PARENT\").Values.hull.config.specific.database.username }}
              >>>"
          cacheDbPassword:
            inline: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
              {{ (index . \"PARENT\").Values.hull.config.specific.database.password }}
              >>>"
          gitRepositoryPath:
            inline:  "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
              {{ (index . \"PARENT\").Values.hull.config.specific.git.repository.path }}
              >>>"
          gitRepositoryUsername: 
            inline: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
              {{ (index . \"PARENT\").Values.hull.config.specific.git.repository.username }}
              >>>"
          gitRepositoryPassword: 
            inline: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
              {{ (index . \"PARENT\").Values.hull.config.specific.git.repository.password }}
              >>>"
      azuresecrets:
        data:
          azurestorageaccountname:  # Storage Account Name
            inline: ""
          azurestorageaccountkey:   # Storage Account Key
            inline: ""
      'authservice-token-secret':
        data:
          productClientId: 
            inline: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
              {{ (index . \"PARENT\").Values.hull.config.specific.authService.clientId }}
              >>>"
          productClientSecret: 
            inline: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
              {{ (index . \"PARENT\").Values.hull.config.specific.authService.clientSecret }}
              >>>"
    cronjob:
      disabled:
        schedule: "* * 2"
        job:
          pod:
            containers:
              main:
                image:
                  repository: my/image/repo
                  tag: "99.9"
        
      static-name:
        schedule: "* * 2"
        job:
          pod:
            containers:
              main:
                image:
                  repository: my/image/repo
                  tag: "99.9"
        
        
      metadata-merge:
        schedule: "a"
        job:
          pod:
            containers:
              main:
                image:
                  repository: my/image/repo
                  tag: "99.9"
        
        
      metadata-overwrite:
        schedule: "* * 2"
        job:
          pod:
            containers:
              main:
                image:
                  repository: my/image/repo
                  tag: "99.9"

      metadata-custom-template-merge:
        schedule: "* * 2"
        job:
          pod:
            containers:
              main:
                image:
                  repository: my/image/repo
                  tag: "99.9"

      metadata-custom-template-overwrite:
        schedule: "* * 2"
        job:
          pod:
            containers:
              main:
                image:
                  repository: my/image/repo
                  tag: "99.9"

      metadata-custom-template-multi-merge:
        schedule: "* * 2"
        job:
          pod:
            containers:
              main:
                image:
                  repository: my/image/repo
                  tag: "99.9"

      metadata-custom-template-multi-overwrite:
        schedule: "* * 2"
        job:
          pod:
            containers:
              main:
                image:
                  repository: my/image/repo
                  tag: "99.9"

      metadata-no-template:
        schedule: "* * 2"
        job:
          pod:
            containers:
              main:
                image:
                  repository: my/image/repo
                  tag: "99.9"

      metadata-default-template-as-source:
        schedule: "* * 2"
        job:
          pod:
            containers:
              main:
                image:
                  repository: my/image/repo
                  tag: "99.9"

      metadata-default-custom-overwrite:
        schedule: "* * 2"
        job:
          pod:
            containers:
              main:
                image:
                  repository: my/image/repo
                  tag: "99.9"
                  
      disabled-transform:
        schedule: "* * 2"
        job:
          pod:
            containers:
              main:
                image:
                  repository: my/image/repo
                  tag: "99.9"
        
      enabled-transform:
        schedule: "* * 2"
        job:
          pod:
            containers:
              main:
                image:
                  repository: my/image/repo
                  tag: "99.9"
        
      disabled-transform-dict:
        schedule: "* * 2"
        job:
          pod:
            containers:
              main:
                image:
                  repository: my/image/repo
                  tag: "99.9"
        
      enabled-transform-dict:
        schedule: "* * 2"
        job:
          pod:
            containers:
              main:
                image:
                  repository: my/image/repo
                  tag: "99.9"

      disabled-transform-tpl-if:
        schedule: "* * 2"
        job:
          pod:
            containers:
              main:
                image:
                  repository: my/image/repo
                  tag: "99.9"

      
      enabled-transform-tpl-if:
        schedule: "* * 2"
        job:
          pod:
            containers:
              main:
                image:
                  repository: my/image/repo
                  tag: "99.9"

      metadata-name-override:
        schedule: "* * 2"
        job:
          pod:
            containers:
              main:
                image:
                  repository: my/image/repo
                  tag: "99.9"
          
      metadata-name-override-static:
        schedule: "* * 2"
        job:
          pod:
            containers:
              main:
                image:
                  repository: my/image/repo
                  tag: "99.9"

      metadata-object-info:
        schedule: "* * 2"
        job:
          pod:
            containers:
              main:
                image:
                  repository: my/image/repo
                  tag: "99.9"
      
      metadata-stringify:
        schedule: "* * 2"
        job:
          pod:
            containers:
              main:
                image:
                  repository: my/image/repo
                  tag: "99.9"
                  
      git-gc:
        enabled: true
        schedule: "0 0 * * *"
        job:
          pod:
            containers:
              git-gc:
                image:
                  repository: docker.io/alpine/git
                  tag: v2.26.2
                command:
                  - sh
                  - '-C'
                  - /script/git-index-pack.sh
                  - "$(GIT_REPOSITORY_PATH)"
                  - "1"
                tty: true
                env:
                  GIT_REPOSITORY_PATH:
                    value: "_HULL_TRANSFORMATION_<<<NAME=hull.util.transformation.tpl>>><<<CONTENT=
                      {{ (index . \"PARENT\").Values.hull.config.specific.git.repository.path }}
                      >>>"
                volumeMounts:
                  git-index-pack:
                    name: git-index-path
                    mountPath: '/script'
                  repository:
                    name: repository
                    mountPath: '/vpmsmounts'
            volumes:
              git-index-pack:
                configMap: 
                  name: git-index-pack
                  defaultMode: 0744
              repository:
                persistentVolumeClaim: 
                  claimName: repository-claim
      test-serializing:
        schedule: "* * 2"
        job:
          pod:
            containers:
              main:
                image:
                  repository: my/image/repo
                  tag: "99.9"
    