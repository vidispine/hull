# Check basic metadata functionality

* Prepare default test case for this kind including suites "namespaceoverride,globalmetadata,objecttypemetadata"
* Lint and Render

Namespace must be set and overriden

* All test objects have key "metadata§namespace" with value "a-namespace-to-render"

* Prepare default test case for this kind including suites "namingoverride,globalmetadata,objecttypemetadata"
* Lint and Render

General label section must be populated with overriden names

* All test objects have key "metadata§labels§app.kubernetes.io/instance" with value "release-name"
* All test objects have key "metadata§labels§app.kubernetes.io/managed-by" with value "Helm"
* All test objects have key "metadata§labels§app.kubernetes.io/name" with value "a-shorter-name"
* All test objects have key "metadata§labels§app.kubernetes.io/part-of" with value "undefined"
* All test objects have key "metadata§labels§app.kubernetes.io/version" with value "<K8S_MAJOR_VERSION>.0"


Static names can be created

* Set test object to "static-name"

Check explicit name override

* Set test object to "a-slightly-longer-name-usethisfinename"
* Test Object has key "metadata§name" with value "a-slightly-longer-name-usethisfinename"
* Test Object has key "metadata§labels§app.kubernetes.io/component" with value "usethisfinename"

* Set test object to "usethisfinestaticname"
* Test Object has key "metadata§name" with value "usethisfinestaticname"
* Test Object has key "metadata§labels§app.kubernetes.io/component" with value "usethisfinestaticname"

* Set test object to "a-slightly-longer-name-metadata-merge"

Component must be key name

* Test Object has key "metadata§labels§app.kubernetes.io/component" with value "metadata-merge"


All labels and annotations from general metadata, defaults and object must be present

* Test Object has key "metadata§labels§concrete_label_1" with value "Concrete Label 1"
* Test Object has key "metadata§labels§concrete_label_2" with value "Concrete Label 2"
* Test Object has key "metadata§labels§default_label_1" with value "Default Label 1"
* Test Object has key "metadata§labels§default_label_2" with value "Default Label 2"
* Test Object has key "metadata§labels§general_custom_label_1" with value "General Custom Label 1"
* Test Object has key "metadata§labels§general_custom_label_2" with value "General Custom Label 2"
* Test Object has key "metadata§annotations§concrete_annotation_1" with value "Concrete Annotation 1"
* Test Object has key "metadata§annotations§concrete_annotation_2" with value "Concrete Annotation 2"
* Test Object has key "metadata§annotations§default_annotation_1" with value "Default Annotation 1"
* Test Object has key "metadata§annotations§default_annotation_2" with value "Default Annotation 2"
* Test Object has key "metadata§annotations§general_custom_annotation_1" with value "General Custom Annotation 1"
* Test Object has key "metadata§annotations§general_custom_annotation_2" with value "General Custom Annotation 2"

Overwriting metadata must work properly

* Set test object to "a-slightly-longer-name-metadata-overwrite"

* Test Object has key "metadata§labels§app.kubernetes.io/component" with value "metadata-overwrite"

* Test Object has key "metadata§labels§concrete_label_1" with value "Concrete Label 1"
* Test Object has key "metadata§labels§general_custom_label_1" with value "General Custom Label 1"
* Test Object has key "metadata§labels§general_custom_label_2" with value "General Custom Label 2"
* Test Object has key "metadata§labels§general_custom_label_3" with value "Concrete Label 3"
* Test Object has key "metadata§labels§default_label_1" with value "Default Label 1"
* Test Object has key "metadata§labels§default_label_2" with value "Concrete Label 2"
* Test Object has key "metadata§annotations§concrete_annotation_1" with value "Concrete Annotation 1"
* Test Object has key "metadata§annotations§general_custom_annotation_1" with value "General Custom Annotation 1"
* Test Object has key "metadata§annotations§general_custom_annotation_2" with value "General Custom Annotation 2"
* Test Object has key "metadata§annotations§general_custom_annotation_3" with value "Concrete Annotation 3"
* Test Object has key "metadata§annotations§default_annotation_1" with value "Default Annotation 1"
* Test Object has key "metadata§annotations§default_annotation_2" with value "Concrete Annotation 2"

Run namespace set via argument test

* Prepare default test case for this kind including suites "globalmetadata,objecttypemetadata"
* Lint and Render to namespace "namespace-provided-as-arg"
* All test objects have key "metadata§namespace" with value "namespace-provided-as-arg"



Run non-name override tests

* Prepare default test case for this kind including suites "globalmetadata,objecttypemetadata"
* Lint and Render

Namespace must be set to default

* All test objects have key "metadata§namespace" with value "default"

General label section must be populated

* All test objects have key "metadata§labels§app.kubernetes.io/instance" with value "release-name"
* All test objects have key "metadata§labels§app.kubernetes.io/managed-by" with value "Helm"
* All test objects have key "metadata§labels§app.kubernetes.io/name" with value of key "chart" from scenario data_store
* All test objects have key "metadata§labels§app.kubernetes.io/part-of" with value "undefined"
* All test objects have key "metadata§labels§app.kubernetes.io/version" with value "<K8S_MAJOR_VERSION>.0"

Run metadataNameOverride tests

Check explicit name override

* Set test object to "release-name-hull-test-usethisfinename"
* Test Object has key "metadata§name" with value "release-name-hull-test-usethisfinename"
* Test Object has key "metadata§labels§app.kubernetes.io/component" with value "usethisfinename"

* Set test object to "usethisfinestaticname"
* Test Object has key "metadata§name" with value "usethisfinestaticname"
* Test Object has key "metadata§labels§app.kubernetes.io/component" with value "usethisfinestaticname"

* Prepare default test case for this kind including suites "globalmetadata,objecttypemetadata"
* Lint and Render

General label section must be populated

* All test objects have key "metadata§labels§app.kubernetes.io/instance" with value "release-name"
* All test objects have key "metadata§labels§app.kubernetes.io/managed-by" with value "Helm"
* All test objects have key "metadata§labels§app.kubernetes.io/name" with value of key "chart" from scenario data_store
* All test objects have key "metadata§labels§app.kubernetes.io/part-of" with value "undefined"
* All test objects have key "metadata§labels§app.kubernetes.io/version" with value "<K8S_MAJOR_VERSION>.0"

Static names can be created

* Set test object to "static-name"

* Set test object to "release-name-hull-test-metadata-merge"

Component must be key name

* Test Object has key "metadata§labels§app.kubernetes.io/component" with value "metadata-merge"

All labels and annotations from general metadata, defaults and object must be present

* Test Object has key "metadata§labels§concrete_label_1" with value "Concrete Label 1"
* Test Object has key "metadata§labels§concrete_label_2" with value "Concrete Label 2"
* Test Object has key "metadata§labels§default_label_1" with value "Default Label 1"
* Test Object has key "metadata§labels§default_label_2" with value "Default Label 2"
* Test Object has key "metadata§labels§general_custom_label_1" with value "General Custom Label 1"
* Test Object has key "metadata§labels§general_custom_label_2" with value "General Custom Label 2"
* Test Object has key "metadata§annotations§concrete_annotation_1" with value "Concrete Annotation 1"
* Test Object has key "metadata§annotations§concrete_annotation_2" with value "Concrete Annotation 2"
* Test Object has key "metadata§annotations§default_annotation_1" with value "Default Annotation 1"
* Test Object has key "metadata§annotations§default_annotation_2" with value "Default Annotation 2"
* Test Object has key "metadata§annotations§general_custom_annotation_1" with value "General Custom Annotation 1"
* Test Object has key "metadata§annotations§general_custom_annotation_2" with value "General Custom Annotation 2"

Overwriting metadata must work properly

* Set test object to "release-name-hull-test-metadata-overwrite"

* Test Object has key "metadata§labels§app.kubernetes.io/component" with value "metadata-overwrite"

* Test Object has key "metadata§labels§concrete_label_1" with value "Concrete Label 1"
* Test Object has key "metadata§labels§general_custom_label_1" with value "General Custom Label 1"
* Test Object has key "metadata§labels§general_custom_label_2" with value "General Custom Label 2"
* Test Object has key "metadata§labels§general_custom_label_3" with value "Concrete Label 3"
* Test Object has key "metadata§labels§default_label_1" with value "Default Label 1"
* Test Object has key "metadata§labels§default_label_2" with value "Concrete Label 2"
* Test Object has key "metadata§annotations§concrete_annotation_1" with value "Concrete Annotation 1"
* Test Object has key "metadata§annotations§general_custom_annotation_1" with value "General Custom Annotation 1"
* Test Object has key "metadata§annotations§general_custom_annotation_2" with value "General Custom Annotation 2"
* Test Object has key "metadata§annotations§general_custom_annotation_3" with value "Concrete Annotation 3"
* Test Object has key "metadata§annotations§default_annotation_1" with value "Default Annotation 1"
* Test Object has key "metadata§annotations§default_annotation_2" with value "Concrete Annotation 2"

Stacking of Default Templates

* Set test object to "release-name-hull-test-metadata-no-template"
* Test Object has key "metadata§labels§concrete_label_1" with value "No Template Concrete Label 1"
* Test Object has key "metadata§labels§concrete_label_2" with value "No Template Concrete Label 2"
* Test Object has key "metadata§annotations§concrete_annotation_1" with value "No Template Concrete Annotation 1"
* Test Object has key "metadata§annotations§concrete_annotation_2" with value "No Template Concrete Annotation 2"


* Set test object to "release-name-hull-test-metadata-custom-template-merge"

Component must be key name

* Test Object has key "metadata§labels§app.kubernetes.io/component" with value "metadata-custom-template-merge"

All labels and annotations from general metadata, defaults and object must be present

* Test Object has key "metadata§labels§concrete_label_1" with value "Custom Default Template 1 Concrete Label 1"
* Test Object has key "metadata§labels§concrete_label_2" with value "Custom Default Template 1 Concrete Label 2"
* Test Object has key "metadata§labels§default_label_4" with value "Custom Default Template 1 Label 4"
* Test Object has key "metadata§labels§default_label_5" with value "Custom Default Template 1 Label 5"
* Test Object has key "metadata§labels§general_custom_label_1" with value "General Custom Label 1"
* Test Object has key "metadata§labels§general_custom_label_2" with value "General Custom Label 2"
* Test Object has key "metadata§labels§general_custom_label_3" with value "Custom Default Template 1 Label 3"
* Test Object has key "metadata§annotations§concrete_annotation_1" with value "Custom Default Template 1 Concrete Annotation 1"
* Test Object has key "metadata§annotations§concrete_annotation_2" with value "Custom Default Template 1 Concrete Annotation 2"
* Test Object has key "metadata§annotations§default_annotation_4" with value "Custom Default Template 1 Annotation 4"
* Test Object has key "metadata§annotations§default_annotation_5" with value "Custom Default Template 1 Annotation 5"
* Test Object has key "metadata§annotations§general_custom_annotation_1" with value "General Custom Annotation 1"
* Test Object has key "metadata§annotations§general_custom_annotation_2" with value "General Custom Annotation 2"
* Test Object has key "metadata§annotations§general_custom_annotation_3" with value "Custom Default Template 1 Annotation 3"

Overwriting metadata must work properly

* Set test object to "release-name-hull-test-metadata-custom-template-overwrite"

* Test Object has key "metadata§labels§app.kubernetes.io/component" with value "metadata-custom-template-overwrite"

* Test Object has key "metadata§labels§concrete_label_1" with value "Custom Default Template 1 Concrete Label 1"
* Test Object has key "metadata§labels§general_custom_label_1" with value "General Custom Label 1"
* Test Object has key "metadata§labels§general_custom_label_2" with value "General Custom Label 2"
* Test Object has key "metadata§labels§general_custom_label_3" with value "Custom Default Template 1 Concrete Label 3"
* Test Object has key "metadata§labels§default_label_4" with value "Custom Default Template 1 Concrete Label 4"
* Test Object has key "metadata§labels§default_label_5" with value "Custom Default Template 1 Label 5"
* Test Object has key "metadata§annotations§concrete_annotation_1" with value "Custom Default Template 1 Concrete Annotation 1"
* Test Object has key "metadata§annotations§general_custom_annotation_1" with value "General Custom Annotation 1"
* Test Object has key "metadata§annotations§general_custom_annotation_2" with value "General Custom Annotation 2"
* Test Object has key "metadata§annotations§general_custom_annotation_3" with value "Custom Default Template 1 Concrete Annotation 3"
* Test Object has key "metadata§annotations§default_annotation_4" with value "Custom Default Template 1 Concrete Annotation 4"
* Test Object has key "metadata§annotations§default_annotation_5" with value "Custom Default Template 1 Annotation 5"

* Set test object to "release-name-hull-test-metadata-custom-template-multi-merge"

Component must be key name

* Test Object has key "metadata§labels§app.kubernetes.io/component" with value "metadata-custom-template-multi-merge"

All labels and annotations from general metadata, defaults and object must be present

* Test Object has key "metadata§labels§default_label_4" with value "Custom Default Template 1 Label 4"
* Test Object has key "metadata§labels§default_label_5" with value "Custom Default Template 2 Label 5"
* Test Object has key "metadata§labels§default_label_6" with value "Multi Merge Default Label 6"
* Test Object has key "metadata§labels§concrete_label_1" with value "Custom Default Template 2 Concrete Label 1"
* Test Object has key "metadata§labels§concrete_label_2" with value "Custom Default Template 2 Concrete Label 2"
* Test Object has key "metadata§labels§general_custom_label_1" with value "General Custom Label 1"
* Test Object has key "metadata§labels§general_custom_label_2" with value "General Custom Label 2"
* Test Object has key "metadata§labels§general_custom_label_3" with value "Custom Default Template 2 Label 3"
* Test Object has key "metadata§annotations§default_annotation_4" with value "Custom Default Template 1 Annotation 4"
* Test Object has key "metadata§annotations§default_annotation_5" with value "Custom Default Template 2 Annotation 5"
* Test Object has key "metadata§annotations§default_annotation_6" with value "Multi Merge Default Annotation 6"
* Test Object has key "metadata§annotations§concrete_annotation_1" with value "Custom Default Template 2 Concrete Annotation 1"
* Test Object has key "metadata§annotations§concrete_annotation_2" with value "Custom Default Template 2 Concrete Annotation 2"
* Test Object has key "metadata§annotations§general_custom_annotation_1" with value "General Custom Annotation 1"
* Test Object has key "metadata§annotations§general_custom_annotation_2" with value "General Custom Annotation 2"
* Test Object has key "metadata§annotations§general_custom_annotation_3" with value "Custom Default Template 2 Annotation 3"

Overwriting metadata must work properly

* Set test object to "release-name-hull-test-metadata-custom-template-multi-overwrite"

* Test Object has key "metadata§labels§app.kubernetes.io/component" with value "metadata-custom-template-multi-overwrite"

* Test Object has key "metadata§labels§concrete_label_1" with value "Custom Default Template 2 Concrete Label 1"
* Test Object has key "metadata§labels§general_custom_label_1" with value "General Custom Label 1"
* Test Object has key "metadata§labels§general_custom_label_2" with value "General Custom Label 2"
* Test Object has key "metadata§labels§general_custom_label_3" with value "Custom Default Template 2 Concrete Label 3"
* Test Object has key "metadata§labels§default_label_4" with value "Custom Default Template 2 Concrete Label 4"
* Test Object has key "metadata§labels§default_label_5" with value "Custom Default Template 2 Label 5"
* Test Object has key "metadata§labels§default_label_6" with value "Multi Overwrite Default Label 6"
* Test Object has key "metadata§annotations§concrete_annotation_1" with value "Custom Default Template 2 Concrete Annotation 1"
* Test Object has key "metadata§annotations§general_custom_annotation_1" with value "General Custom Annotation 1"
* Test Object has key "metadata§annotations§general_custom_annotation_2" with value "General Custom Annotation 2"
* Test Object has key "metadata§annotations§general_custom_annotation_3" with value "Custom Default Template 2 Concrete Annotation 3"
* Test Object has key "metadata§annotations§default_annotation_4" with value "Custom Default Template 2 Concrete Annotation 4"
* Test Object has key "metadata§annotations§default_annotation_5" with value "Custom Default Template 2 Annotation 5"
* Test Object has key "metadata§annotations§default_annotation_6" with value "Multi Overwrite Default Annotation 6"

* Set test object to "release-name-hull-test-metadata-default-custom-overwrite"

* Test Object has key "metadata§labels§app.kubernetes.io/component" with value "metadata-default-custom-overwrite"

* Test Object has key "metadata§labels§concrete_label_1" with value "Custom Default Template 2 Concrete Label 1"
* Test Object has key "metadata§labels§general_custom_label_1" with value "General Custom Label 1"
* Test Object has key "metadata§labels§general_custom_label_2" with value "General Custom Label 2"
* Test Object has key "metadata§labels§general_custom_label_3" with value "Custom Default Template 2 Concrete Label 3"
* Test Object has key "metadata§labels§default_label_1" with value "Default Label 1"
* Test Object has key "metadata§labels§default_label_2" with value "Default Custom Template Overwrite Default Label 2"
* Test Object has key "metadata§labels§default_label_4" with value "Custom Default Template 2 Concrete Label 4"
* Test Object has key "metadata§labels§default_label_5" with value "Custom Default Template 2 Label 5"
* Test Object has key "metadata§labels§default_label_6" with value "Multi Overwrite Default Label 6"
* Test Object has key "metadata§annotations§concrete_annotation_1" with value "Custom Default Template 2 Concrete Annotation 1"
* Test Object has key "metadata§annotations§general_custom_annotation_1" with value "General Custom Annotation 1"
* Test Object has key "metadata§annotations§general_custom_annotation_2" with value "General Custom Annotation 2"
* Test Object has key "metadata§annotations§general_custom_annotation_3" with value "Custom Default Template 2 Concrete Annotation 3"
* Test Object has key "metadata§annotations§default_annotation_1" with value "Default Annotation 1"
* Test Object has key "metadata§annotations§default_annotation_2" with value "Default Custom Template Overwrite Default Annotation 2"
* Test Object has key "metadata§annotations§default_annotation_4" with value "Custom Default Template 2 Concrete Annotation 4"
* Test Object has key "metadata§annotations§default_annotation_5" with value "Custom Default Template 2 Annotation 5"
* Test Object has key "metadata§annotations§default_annotation_6" with value "Multi Overwrite Default Annotation 6"

Enabling and Disabling

* Test object "release-name-hull-test-disabled" does not exist
* Test object "release-name-hull-test-disabled-transform" does not exist
* Test object "release-name-hull-test-disabled-transform-dict" does not exist
* Test object "release-name-hull-test-nulled" does not exist

* Set test object to "release-name-hull-test-enabled-transform"
* Test Object has key "metadata§annotations§annotation" with value "I am an Annotation"

* Set test object to "release-name-hull-test-enabled-transform-dict"
* Test Object has key "metadata§annotations§annotation" with value "I am an Annotation"

Transformation checks

* Test object "release-name-hull-test-disabled-transform-tpl-if" does not exist

* Set test object to "release-name-hull-test-enabled-transform-tpl-if"
* Test Object has key "metadata§annotations§annotation" with value "I am an Annotation"

Use Object Type and Instance Key

* Set test object to "release-name-hull-test-metadata-object-info"
* Test Object has key "metadata§annotations§annotation_object_instance_key" with value "metadata-object-info"
* Test Object has key "metadata§annotations§annotation_object_type" with value equaling object type
* Test Object has key "metadata§annotations§annotation_bool_true" with value "true"
* Test Object has key "metadata§annotations§annotation_bool_false" with value "false"
* Test Object has key "metadata§annotations§annotation_bool_object_instance_key_true" with value "true"
* Test Object has key "metadata§annotations§annotation_bool_object_instance_key_false" with value "false"
* Test Object has key "metadata§annotations§annotation_bool_object_type_true" with value "true"
* Test Object has key "metadata§annotations§annotation_bool_object_type_false" with value "false"
* Test Object has key "metadata§annotations§annotation_get_object_instance_key_true" with value "true"
* Test Object has key "metadata§annotations§annotation_get_object_instance_key_false" with value "false"
* Test Object has key "metadata§annotations§annotation_get_object_type_true" with value "true"
* Test Object has key "metadata§annotations§annotation_get_object_type_false" with value "false"

* Test Object has key "metadata§labels§label_object_instance_key" with value "metadata-object-info"
* Test Object has key "metadata§labels§label_object_type" with value equaling object type
* Test Object has key "metadata§labels§label_bool_true" with value "true"
* Test Object has key "metadata§labels§label_bool_false" with value "false"
* Test Object has key "metadata§labels§label_bool_object_instance_key_true" with value "true"
* Test Object has key "metadata§labels§label_bool_object_instance_key_false" with value "false"
* Test Object has key "metadata§labels§label_bool_object_type_true" with value "true"
* Test Object has key "metadata§labels§label_bool_object_type_false" with value "false"
* Test Object has key "metadata§labels§label_get_object_instance_key_true" with value "true"
* Test Object has key "metadata§labels§label_get_object_instance_key_false" with value "false"
* Test Object has key "metadata§labels§label_get_object_type_true" with value "true"
* Test Object has key "metadata§labels§label_get_object_type_false" with value "false"


Force Strings as annotation and label values

* Set test object to "release-name-hull-test-metadata-stringify"
* Test Object has key "metadata§annotations§a_string_value" with value "a_string_value"
* Test Object has key "metadata§annotations§an_integer_value" with value "123"
* Test Object has key "metadata§annotations§a_float_value" with value "1.23"
* Test Object has key "metadata§annotations§a_boolean_value" with value "true"

Test serialization functions

* Set test object to "release-name-hull-test-test-serializing"

* Test Object has key "metadata§annotations§test-get-dict" with value of key "test-get-dict" from expected.yaml of suite "basic"
* Test Object has key "metadata§annotations§test-get-dict-json" with value of key "test-get-dict-json" from expected.yaml of suite "basic"
* Test Object has key "metadata§annotations§test-get-dict-prettyjson" with value of key "test-get-dict-prettyjson" from expected.yaml of suite "basic"
* Test Object has key "metadata§annotations§test-get-dict-rawjson" with value of key "test-get-dict-rawjson" from expected.yaml of suite "basic"
* Test Object has key "metadata§annotations§test-get-dict-yaml" with value of key "test-get-dict-yaml" from expected.yaml of suite "basic"
* Test Object has key "metadata§annotations§test-get-dict-string" with value of key "test-get-dict-string" from expected.yaml of suite "basic"
* Test Object has key "metadata§annotations§test-get-list" with value of key "test-get-list" from expected.yaml of suite "basic"
* Test Object has key "metadata§annotations§test-get-list-json" with value of key "test-get-list-json" from expected.yaml of suite "basic"
* Test Object has key "metadata§annotations§test-get-list-prettyjson" with value of key "test-get-list-prettyjson" from expected.yaml of suite "basic"
* Test Object has key "metadata§annotations§test-get-list-rawjson" with value of key "test-get-list-rawjson" from expected.yaml of suite "basic"
* Test Object has key "metadata§annotations§test-get-list-yaml" with value of key "test-get-list-yaml" from expected.yaml of suite "basic"
* Test Object has key "metadata§annotations§test-get-list-string" with value of key "test-get-list-string" from expected.yaml of suite "basic"
* Test Object has key "metadata§annotations§test-include-code-dict" with value of key "test-include-code-dict" from expected.yaml of suite "basic"
* Test Object has key "metadata§annotations§test-include-code-dict-json" with value of key "test-include-code-dict-json" from expected.yaml of suite "basic"
* Test Object has key "metadata§annotations§test-include-code-dict-prettyjson" with value of key "test-include-code-dict-prettyjson" from expected.yaml of suite "basic"
* Test Object has key "metadata§annotations§test-include-code-dict-rawjson" with value of key "test-include-code-dict-rawjson" from expected.yaml of suite "basic"
* Test Object has key "metadata§annotations§test-include-code-dict-yaml" with value of key "test-include-code-dict-yaml" from expected.yaml of suite "basic"
* Test Object has key "metadata§annotations§test-include-code-dict-string" with value of key "test-include-code-dict-string" from expected.yaml of suite "basic"
* Test Object has key "metadata§annotations§test-include-code-dict-quote" with value of key "test-include-code-dict-quote" from expected.yaml of suite "basic"
* Test Object has key "metadata§annotations§test-include-code-dict-quote-json" with value of key "test-include-code-dict-quote-json" from expected.yaml of suite "basic"
* Test Object has key "metadata§annotations§test-include-code-dict-quote-prettyjson" with value of key "test-include-code-dict-quote-prettyjson" from expected.yaml of suite "basic"
* Test Object has key "metadata§annotations§test-include-code-dict-quote-rawjson" with value of key "test-include-code-dict-quote-rawjson" from expected.yaml of suite "basic"
* Test Object has key "metadata§annotations§test-include-code-dict-quote-yaml" with value of key "test-include-code-dict-quote-yaml" from expected.yaml of suite "basic"
* Test Object has key "metadata§annotations§test-include-code-dict-quote-string" with value of key "test-include-code-dict-quote-string" from expected.yaml of suite "basic"
* Test Object has key "metadata§annotations§test-include-code-list-empty" with value of key "test-include-code-list-empty" from expected.yaml of suite "basic"
* Test Object has key "metadata§annotations§test-include-code-list-empty-json" with value of key "test-include-code-list-empty-json" from expected.yaml of suite "basic"
* Test Object has key "metadata§annotations§test-include-code-list-empty-prettyjson" with value of key "test-include-code-list-empty-prettyjson" from expected.yaml of suite "basic"
* Test Object has key "metadata§annotations§test-include-code-list-empty-rawjson" with value of key "test-include-code-list-empty-rawjson" from expected.yaml of suite "basic"
* Test Object has key "metadata§annotations§test-include-code-list-empty-yaml" with value of key "test-include-code-list-empty-yaml" from expected.yaml of suite "basic"
* Test Object has key "metadata§annotations§test-include-code-list-empty-string" with value of key "test-include-code-list-empty-string" from expected.yaml of suite "basic"
* Test Object has key "metadata§annotations§test-include-code-list-non-empty" with value of key "test-include-code-list-non-empty" from expected.yaml of suite "basic"
* Test Object has key "metadata§annotations§test-include-code-list-non-empty-json" with value of key "test-include-code-list-non-empty-json" from expected.yaml of suite "basic"
* Test Object has key "metadata§annotations§test-include-code-list-non-empty-prettyjson" with value of key "test-include-code-list-non-empty-prettyjson" from expected.yaml of suite "basic"
* Test Object has key "metadata§annotations§test-include-code-list-non-empty-rawjson" with value of key "test-include-code-list-non-empty-rawjson" from expected.yaml of suite "basic"
* Test Object has key "metadata§annotations§test-include-code-list-non-empty-yaml" with value of key "test-include-code-list-non-empty-yaml" from expected.yaml of suite "basic"
* Test Object has key "metadata§annotations§test-include-code-list-non-empty-string" with value of key "test-include-code-list-non-empty-string" from expected.yaml of suite "basic"
* Test Object has key "metadata§annotations§test-include-flow-dict" with value of key "test-include-flow-dict" from expected.yaml of suite "basic"

* Test Object has key "metadata§labels§test-get-dict" with value of key "test-get-dict" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-get-dict-json" with value of key "test-get-dict-json" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-get-dict-prettyjson" with value of key "test-get-dict-prettyjson" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-get-dict-rawjson" with value of key "test-get-dict-rawjson" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-get-dict-yaml" with value of key "test-get-dict-yaml" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-get-dict-string" with value of key "test-get-dict-string" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-get-list" with value of key "test-get-list" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-get-list-json" with value of key "test-get-list-json" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-get-list-prettyjson" with value of key "test-get-list-prettyjson" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-get-list-rawjson" with value of key "test-get-list-rawjson" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-get-list-yaml" with value of key "test-get-list-yaml" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-get-list-string" with value of key "test-get-list-string" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-include-code-dict" with value of key "test-include-code-dict" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-include-code-dict-json" with value of key "test-include-code-dict-json" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-include-code-dict-prettyjson" with value of key "test-include-code-dict-prettyjson" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-include-code-dict-rawjson" with value of key "test-include-code-dict-rawjson" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-include-code-dict-yaml" with value of key "test-include-code-dict-yaml" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-include-code-dict-string" with value of key "test-include-code-dict-string" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-include-code-dict-quote" with value of key "test-include-code-dict-quote" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-include-code-dict-quote-json" with value of key "test-include-code-dict-quote-json" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-include-code-dict-quote-prettyjson" with value of key "test-include-code-dict-quote-prettyjson" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-include-code-dict-quote-rawjson" with value of key "test-include-code-dict-quote-rawjson" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-include-code-dict-quote-yaml" with value of key "test-include-code-dict-quote-yaml" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-include-code-dict-quote-string" with value of key "test-include-code-dict-quote-string" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-include-code-list-empty" with value of key "test-include-code-list-empty" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-include-code-list-empty-json" with value of key "test-include-code-list-empty-json" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-include-code-list-empty-prettyjson" with value of key "test-include-code-list-empty-prettyjson" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-include-code-list-empty-rawjson" with value of key "test-include-code-list-empty-rawjson" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-include-code-list-empty-yaml" with value of key "test-include-code-list-empty-yaml" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-include-code-list-empty-string" with value of key "test-include-code-list-empty-string" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-include-code-list-non-empty" with value of key "test-include-code-list-non-empty" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-include-code-list-non-empty-json" with value of key "test-include-code-list-non-empty-json" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-include-code-list-non-empty-prettyjson" with value of key "test-include-code-list-non-empty-prettyjson" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-include-code-list-non-empty-rawjson" with value of key "test-include-code-list-non-empty-rawjson" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-include-code-list-non-empty-yaml" with value of key "test-include-code-list-non-empty-yaml" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-include-code-list-non-empty-string" with value of key "test-include-code-list-non-empty-string" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-include-flow-dict" with value of key "test-include-flow-dict" from expected.yaml of suite "basic"

Test get transformation on root level

* Set test object to "release-name-hull-test-test-get-transformation-on-root"

* Test Object has key "metadata§labels§test-get-chart-apiversion" with value of key "test-get-chart-apiversion" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-get-chart-name-lowercase" with value of key "test-get-chart-name" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-get-chart-name-uppercase" with value of key "test-get-chart-name" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-get-chart-version-lowercase" with value of key "test-get-chart-version" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-get-chart-version-capitalcase" with value of key "test-get-chart-version" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-get-chart-version-with-transformation" with value of key "test-get-chart-version" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-get-chart-kubeversion" with value of key "test-get-chart-kubeversion" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-get-chart-description" with value of key "test-get-chart-description" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-get-chart-type" with value of key "test-get-chart-type" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-get-chart-keywords" with value of key "test-get-chart-keywords" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-get-chart-home" with value of key "test-get-chart-home" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-get-chart-sources" with value of key "test-get-chart-sources" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-get-chart-dependencies" with value of key "test-get-chart-dependencies" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-get-chart-maintainers" with value of key "test-get-chart-maintainers" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-get-chart-icon" with value of key "test-get-chart-icon" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-get-chart-appversion" with value of key "test-get-chart-appversion" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-get-chart-deprecated" with value of key "test-get-chart-deprecated" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-get-chart-annotations" with value of key "test-get-chart-annotations" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-get-chart-annotations-test1" with value of key "test-get-chart-annotations-test1" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-get-chart-annotations-test2" with value of key "test-get-chart-annotations-test2" from expected.yaml of suite "basic"

* Test Object has key "metadata§labels§test-get-release-name" with value of key "test-get-release-name" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-get-release-namespace" with value of key "test-get-release-namespace" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-get-release-isupgrade" with value of key "test-get-release-isupgrade" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-get-release-isinstall" with value of key "test-get-release-isinstall" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-get-release-revision" with value of key "test-get-release-revision" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-get-release-service" with value of key "test-get-release-service" from expected.yaml of suite "basic"

* Test Object has key "metadata§labels§test-get-capabilities-apiversions-legacy" with list value that has count of items greater than "0"
* Test Object has key "metadata§labels§test-get-capabilities-apiversions" with list value that has count of items greater than "0"
* Test Object has key "metadata§labels§test-get-capabilities-kubeversion-legacy" with map value that has "3" items which are not empty
* Test Object has key "metadata§labels§test-get-capabilities-kubeversion" with map value that has "3" items which are not empty
* Test Object has key "metadata§labels§test-get-capabilities-kubeversion-major" with value of key "test-get-capabilities-kubeversion-major" from expected.yaml of suite "basic"
* Test Object has key "metadata§labels§test-get-capabilities-helmversion-legacy" with map value that has "4" items which are not empty
* Test Object has key "metadata§labels§test-get-capabilities-helmversion" with map value that has "4" items which are not empty

* Test Object has key "metadata§labels§test-get-template-basepath" with value of key "test-get-template-basepath" from expected.yaml of suite "basic"

Test get transformation on array item

* Set test object to "release-name-hull-test-test-get-transformations-array"

* Test Object has key "metadata§annotations§test-get-transformation-index-0" with value "just"
* Test Object has key "metadata§annotations§test-get-transformation-index-1" with value "some"
* Test Object has key "metadata§annotations§test-get-transformation-index-2" with value "args"
* Test Object has key "metadata§annotations§test-get-transformation-mixed-index-0" with value "54"
* Test Object has key "metadata§annotations§test-get-transformation-mixed-index-1" with value "false"
* Test Object has key "metadata§annotations§test-get-transformation-mixed-index-subdict-0" with value "b"
* Test Object has key "metadata§annotations§test-get-transformation-mixed-index-subdict-1" with value "d"
* Test Object has key "metadata§annotations§test-get-transformation-mixed-index-subdict-2" with value "398"
* Test Object has key "metadata§annotations§test-get-transformation-mixed-index-subdict-3" with value "false"
* Test Object has key "metadata§annotations§test-get-transformation-mixed-index-subdict-sublist-0" with value "inner_1"
* Test Object has key "metadata§annotations§test-get-transformation-mixed-index-subdict-sublist-1" with value "inner_2"
* Test Object has key "metadata§annotations§test-get-transformation-mixed-index-subdict-sublist-2" with value "inner_3"

Test annotation rendering

* Prepare default test case for this kind including suites ""
* Lint and Render

* Set test object to "release-name-hull-test-no-annotations"
* Test Object does not have key "metadata§annotations"

* Prepare default test case for this kind with test chart "hull-test" and values file "values.hull.yaml" including suites "basic/renderemptyannotations"
* Lint and Render
* Set test object to "release-name-hull-test-no-annotations"
* Test Object has key "metadata§annotations" with dictionary value that has "0" items
