{
  "description": "ResourceSliceSpec contains the information published by the driver in one ResourceSlice.",
  "properties": {
    "allNodes": {
      "description": "AllNodes indicates that all nodes have access to the resources in the pool.\n\nExactly one of NodeName, NodeSelector, AllNodes, and PerDeviceNodeSelection must be set.",
      "type": [
        "boolean",
        "null"
      ]
    },
    "devices": {
      "description": "Devices lists some or all of the devices in this pool.\n\nMust not have more than 128 entries.",
      "items": {
        "description": "Device represents one individual hardware instance that can be selected based on its attributes. Besides the name, exactly one field must be set.",
        "properties": {
          "basic": {
            "description": "BasicDevice defines one device instance.",
            "properties": {
              "allNodes": {
                "description": "AllNodes indicates that all nodes have access to the device.\n\nMust only be set if Spec.PerDeviceNodeSelection is set to true. At most one of NodeName, NodeSelector and AllNodes can be set.",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "attributes": {
                "additionalProperties": {
                  "description": "DeviceAttribute must have exactly one field set.",
                  "properties": {
                    "bool": {
                      "description": "BoolValue is a true/false value.",
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "int": {
                      "description": "IntValue is a number.",
                      "format": "int64",
                      "type": [
                        "integer",
                        "null"
                      ]
                    },
                    "string": {
                      "description": "StringValue is a string. Must not be longer than 64 characters.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "version": {
                      "description": "VersionValue is a semantic version according to semver.org spec 2.0.0. Must not be longer than 64 characters.",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": false
                },
                "description": "Attributes defines the set of attributes for this device. The name of each attribute must be unique in that set.\n\nThe maximum number of attributes and capacities combined is 32.",
                "type": [
                  "object",
                  "null"
                ]
              },
              "capacity": {
                "additionalProperties": {
                  "description": "DeviceCapacity describes a quantity associated with a device.",
                  "properties": {
                    "value": {
                      "oneOf": [
                        {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        {
                          "type": [
                            "number",
                            "null"
                          ]
                        }
                      ]
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": false
                },
                "description": "Capacity defines the set of capacities for this device. The name of each capacity must be unique in that set.\n\nThe maximum number of attributes and capacities combined is 32.",
                "type": [
                  "object",
                  "null"
                ]
              },
              "consumesCounters": {
                "description": "ConsumesCounters defines a list of references to sharedCounters and the set of counters that the device will consume from those counter sets.\n\nThere can only be a single entry per counterSet.\n\nThe total number of device counter consumption entries must be <= 32. In addition, the total number in the entire ResourceSlice must be <= 1024 (for example, 64 devices with 16 counters each).",
                "items": {
                  "description": "DeviceCounterConsumption defines a set of counters that a device will consume from a CounterSet.",
                  "properties": {
                    "counterSet": {
                      "description": "CounterSet is the name of the set from which the counters defined will be consumed.",
                      "type": "string"
                    },
                    "counters": {
                      "additionalProperties": {
                        "description": "Counter describes a quantity associated with a device.",
                        "properties": {
                          "value": {
                            "oneOf": [
                              {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              {
                                "type": [
                                  "number",
                                  "null"
                                ]
                              }
                            ]
                          }
                        },
                        "required": [
                          "value"
                        ],
                        "type": [
                          "object",
                          "null"
                        ],
                        "additionalProperties": false
                      },
                      "description": "Counters defines the counters that will be consumed by the device.\n\nThe maximum number counters in a device is 32. In addition, the maximum number of all counters in all devices is 1024 (for example, 64 devices with 16 counters each).",
                      "type": "object"
                    }
                  },
                  "required": [
                    "counterSet",
                    "counters"
                  ],
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": false
                },
                "type": [
                  "array",
                  "null"
                ],
                "x-kubernetes-list-type": "atomic"
              },
              "nodeName": {
                "description": "NodeName identifies the node where the device is available.\n\nMust only be set if Spec.PerDeviceNodeSelection is set to true. At most one of NodeName, NodeSelector and AllNodes can be set.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "nodeSelector": {
                "description": "A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.",
                "properties": {
                  "nodeSelectorTerms": {
                    "description": "Required. A list of node selector terms. The terms are ORed.",
                    "items": {
                      "description": "A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
                      "properties": {
                        "matchExpressions": {
                          "description": "A list of node selector requirements by node's labels.",
                          "items": {
                            "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                            "properties": {
                              "key": {
                                "description": "The label key that the selector applies to.",
                                "type": "string"
                              },
                              "operator": {
                                "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                "type": "string"
                              },
                              "values": {
                                "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "x-kubernetes-list-type": "atomic"
                              }
                            },
                            "required": [
                              "key",
                              "operator"
                            ],
                            "type": [
                              "object",
                              "null"
                            ],
                            "additionalProperties": false
                          },
                          "type": [
                            "array",
                            "null"
                          ],
                          "x-kubernetes-list-type": "atomic"
                        },
                        "matchFields": {
                          "description": "A list of node selector requirements by node's fields.",
                          "items": {
                            "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                            "properties": {
                              "key": {
                                "description": "The label key that the selector applies to.",
                                "type": "string"
                              },
                              "operator": {
                                "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                "type": "string"
                              },
                              "values": {
                                "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "x-kubernetes-list-type": "atomic"
                              }
                            },
                            "required": [
                              "key",
                              "operator"
                            ],
                            "type": [
                              "object",
                              "null"
                            ],
                            "additionalProperties": false
                          },
                          "type": [
                            "array",
                            "null"
                          ],
                          "x-kubernetes-list-type": "atomic"
                        }
                      },
                      "type": [
                        "object",
                        "null"
                      ],
                      "x-kubernetes-map-type": "atomic",
                      "additionalProperties": false
                    },
                    "type": "array",
                    "x-kubernetes-list-type": "atomic"
                  }
                },
                "required": [
                  "nodeSelectorTerms"
                ],
                "type": [
                  "object",
                  "null"
                ],
                "x-kubernetes-map-type": "atomic",
                "additionalProperties": false
              },
              "taints": {
                "description": "If specified, these are the driver-defined taints.\n\nThe maximum number of taints is 4.\n\nThis is an alpha field and requires enabling the DRADeviceTaints feature gate.",
                "items": {
                  "description": "The device this taint is attached to has the \"effect\" on any claim which does not tolerate the taint and, through the claim, to pods using the claim.",
                  "properties": {
                    "effect": {
                      "description": "The effect of the taint on claims that do not tolerate the taint and through such claims on the pods using them. Valid effects are NoSchedule and NoExecute. PreferNoSchedule as used for nodes is not valid here.",
                      "type": "string"
                    },
                    "key": {
                      "description": "The taint key to be applied to a device. Must be a label name.",
                      "type": "string"
                    },
                    "timeAdded": {
                      "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                      "format": "date-time",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "value": {
                      "description": "The taint value corresponding to the taint key. Must be a label value.",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "required": [
                    "key",
                    "effect"
                  ],
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": false
                },
                "type": [
                  "array",
                  "null"
                ],
                "x-kubernetes-list-type": "atomic"
              }
            },
            "type": [
              "object",
              "null"
            ],
            "additionalProperties": false
          },
          "name": {
            "description": "Name is unique identifier among all devices managed by the driver in the pool. It must be a DNS label.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": [
          "object",
          "null"
        ],
        "additionalProperties": false
      },
      "type": [
        "array",
        "null"
      ],
      "x-kubernetes-list-type": "atomic"
    },
    "driver": {
      "description": "Driver identifies the DRA driver providing the capacity information. A field selector can be used to list only ResourceSlice objects with a certain driver name.\n\nMust be a DNS subdomain and should end with a DNS domain owned by the vendor of the driver. This field is immutable.",
      "type": [
        "string",
        "null"
      ]
    },
    "nodeName": {
      "description": "NodeName identifies the node which provides the resources in this pool. A field selector can be used to list only ResourceSlice objects belonging to a certain node.\n\nThis field can be used to limit access from nodes to ResourceSlices with the same node name. It also indicates to autoscalers that adding new nodes of the same type as some old node might also make new resources available.\n\nExactly one of NodeName, NodeSelector, AllNodes, and PerDeviceNodeSelection must be set. This field is immutable.",
      "type": [
        "string",
        "null"
      ]
    },
    "nodeSelector": {
      "description": "A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.",
      "properties": {
        "nodeSelectorTerms": {
          "description": "Required. A list of node selector terms. The terms are ORed.",
          "items": {
            "description": "A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
            "properties": {
              "matchExpressions": {
                "description": "A list of node selector requirements by node's labels.",
                "items": {
                  "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                  "properties": {
                    "key": {
                      "description": "The label key that the selector applies to.",
                      "type": "string"
                    },
                    "operator": {
                      "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                      "type": "string"
                    },
                    "values": {
                      "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                      "items": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "type": [
                        "array",
                        "null"
                      ],
                      "x-kubernetes-list-type": "atomic"
                    }
                  },
                  "required": [
                    "key",
                    "operator"
                  ],
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": false
                },
                "type": [
                  "array",
                  "null"
                ],
                "x-kubernetes-list-type": "atomic"
              },
              "matchFields": {
                "description": "A list of node selector requirements by node's fields.",
                "items": {
                  "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                  "properties": {
                    "key": {
                      "description": "The label key that the selector applies to.",
                      "type": "string"
                    },
                    "operator": {
                      "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                      "type": "string"
                    },
                    "values": {
                      "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                      "items": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "type": [
                        "array",
                        "null"
                      ],
                      "x-kubernetes-list-type": "atomic"
                    }
                  },
                  "required": [
                    "key",
                    "operator"
                  ],
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": false
                },
                "type": [
                  "array",
                  "null"
                ],
                "x-kubernetes-list-type": "atomic"
              }
            },
            "type": [
              "object",
              "null"
            ],
            "x-kubernetes-map-type": "atomic",
            "additionalProperties": false
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        }
      },
      "required": [
        "nodeSelectorTerms"
      ],
      "type": [
        "object",
        "null"
      ],
      "x-kubernetes-map-type": "atomic",
      "additionalProperties": false
    },
    "perDeviceNodeSelection": {
      "description": "PerDeviceNodeSelection defines whether the access from nodes to resources in the pool is set on the ResourceSlice level or on each device. If it is set to true, every device defined the ResourceSlice must specify this individually.\n\nExactly one of NodeName, NodeSelector, AllNodes, and PerDeviceNodeSelection must be set.",
      "type": [
        "boolean",
        "null"
      ]
    },
    "pool": {
      "description": "ResourcePool describes the pool that ResourceSlices belong to.",
      "properties": {
        "generation": {
          "description": "Generation tracks the change in a pool over time. Whenever a driver changes something about one or more of the resources in a pool, it must change the generation in all ResourceSlices which are part of that pool. Consumers of ResourceSlices should only consider resources from the pool with the highest generation number. The generation may be reset by drivers, which should be fine for consumers, assuming that all ResourceSlices in a pool are updated to match or deleted.\n\nCombined with ResourceSliceCount, this mechanism enables consumers to detect pools which are comprised of multiple ResourceSlices and are in an incomplete state.",
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "description": "Name is used to identify the pool. For node-local devices, this is often the node name, but this is not required.\n\nIt must not be longer than 253 characters and must consist of one or more DNS sub-domains separated by slashes. This field is immutable.",
          "type": "string"
        },
        "resourceSliceCount": {
          "description": "ResourceSliceCount is the total number of ResourceSlices in the pool at this generation number. Must be greater than zero.\n\nConsumers can use this to check whether they have seen all ResourceSlices belonging to the same pool.",
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "name",
        "generation",
        "resourceSliceCount"
      ],
      "type": [
        "object",
        "null"
      ],
      "additionalProperties": false
    },
    "sharedCounters": {
      "description": "SharedCounters defines a list of counter sets, each of which has a name and a list of counters available.\n\nThe names of the SharedCounters must be unique in the ResourceSlice.\n\nThe maximum number of SharedCounters is 32.",
      "items": {
        "description": "CounterSet defines a named set of counters that are available to be used by devices defined in the ResourceSlice.\n\nThe counters are not allocatable by themselves, but can be referenced by devices. When a device is allocated, the portion of counters it uses will no longer be available for use by other devices.",
        "properties": {
          "counters": {
            "additionalProperties": {
              "description": "Counter describes a quantity associated with a device.",
              "properties": {
                "value": {
                  "oneOf": [
                    {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    {
                      "type": [
                        "number",
                        "null"
                      ]
                    }
                  ]
                }
              },
              "required": [
                "value"
              ],
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": false
            },
            "description": "Counters defines the set of counters for this CounterSet The name of each counter must be unique in that set and must be a DNS label.\n\nThe maximum number of counters is 32.",
            "type": "object"
          },
          "name": {
            "description": "Name defines the name of the counter set. It must be a DNS label.",
            "type": "string"
          }
        },
        "required": [
          "name",
          "counters"
        ],
        "type": [
          "object",
          "null"
        ],
        "additionalProperties": false
      },
      "type": [
        "array",
        "null"
      ],
      "x-kubernetes-list-type": "atomic"
    }
  },
  "required": [
    "driver",
    "pool"
  ],
  "type": "object",
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}